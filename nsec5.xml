<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2181 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC2308 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2308.xml">
<!ENTITY RFC4033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4033.xml">
<!ENTITY RFC4034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4034.xml">
<!ENTITY RFC4035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4035.xml">
<!ENTITY RFC4648 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml">
<!ENTITY RFC5114 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5114.xml">
<!ENTITY RFC5155 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5155.xml">
<!ENTITY RFC6234 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6234.xml">
<!ENTITY RFC6605 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6605.xml">
<!ENTITY RFC7748 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7748.xml">
<!ENTITY RFC8080 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8080.xml">
<!ENTITY I-D.goldbe-vrf SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.goldbe-vrf.xml">
<!ENTITY RFC6781 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6781.xml">
<!ENTITY RFC7129 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7129.xml">
<!ENTITY RFC7719 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7719.xml">
<!ENTITY I-D.gieben-nsec4 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.gieben-nsec4.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-vcelak-nsec5-05" category="std">

  <front>
    <title abbrev="NSEC5">NSEC5, DNSSEC Authenticated Denial of Existence</title>

    <author initials="J." surname="Vcelak" fullname="Jan Vcelak">
      <organization>CZ.NIC</organization>
      <address>
        <postal>
          <street>Milesovska 1136/5</street>
          <city>Praha</city>
          <code>130 00</code>
          <country>CZ</country>
        </postal>
        <email>jan.vcelak@nic.cz</email>
      </address>
    </author>
    <author initials="S." surname="Goldberg" fullname="Sharon Goldberg">
      <organization>Boston University</organization>
      <address>
        <postal>
          <street>111 Cummington St, MCS135</street>
          <city>Boston</city>
          <region>MA</region>
          <code>02215</code>
          <country>USA</country>
        </postal>
        <email>goldbe@cs.bu.edu</email>
      </address>
    </author>
    <author initials="D." surname="Papadopoulos" fullname="Dimitrios Papadopoulos">
      <organization>University of Maryland</organization>
      <address>
        <postal>
          <street>8223 Paint Branch Dr</street>
          <city>College Park</city>
          <region>MD</region>
          <code>20740</code>
          <country>USA</country>
        </postal>
        <email>dipapado@umd.edu</email>
      </address>
    </author>
    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <postal>
          <street>2550 Wasser Terr</street>
          <city>Herndon</city>
          <region>VA</region>
          <code>20171</code>
          <country>USA</country>
        </postal>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="D.C." surname="Lawrence" fullname="David C Lawrence">
      <organization>Akamai Technologies</organization>
      <address>
        <postal>
          <street>150 Broadway</street>
          <city>Boston</city>
          <region>MA</region>
          <code>02142-1054</code>
          <country>USA</country>
        </postal>
        <email>tale@akamai.com</email>
      </address>
    </author>

    <date year="2017"/>

    <area>Internet</area>
    <workgroup>Network Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>The Domain Name System Security Extensions (DNSSEC) introduced two 
resource records (RR) for authenticated denial of existence: the
NSEC RR and the NSEC3 RR. This
document introduces NSEC5 as an alternative mechanism for DNSSEC
authenticated denial of existence.  NSEC5 uses verifiable random
functions (VRFs) to prevent offline enumeration of zone
contents. NSEC5 also protects the integrity of the zone contents even
if an adversary compromises one of the authoritative servers for the
zone.  Integrity is preserved because NSEC5 does not require private
zone-signing keys to be present on all authoritative servers for the
zone, in contrast to DNSSEC online signing schemes like NSEC3 White
Lies.</t>



    </abstract>


    <note title="Ed note">


<t>Text inside square brackets ([]) is additional background
information, answers to frequently asked questions, general musings,
etc.  They will be removed before publication.  This document is being
collaborated on in GitHub at
&lt;https://github.com/fcelda/nsec5-draft&gt;.  The most recent version of
the document, open issues, etc should all be available here.  The
authors gratefully accept pull requests.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<section anchor="rationale" title="Rationale">

<t>NSEC5 provides an alternative mechanism for authenticated denial of
existence for the DNS Security Extensions (DNSSEC). NSEC5 has two key
security properties.  First, NSEC5 protects the integrity of the zone
contents even if an adversary compromises one of the authoritative
servers for the zone.  Second, NSEC5 prevents offline zone
enumeration, where an adversary makes a small number of online DNS
queries and then processes them offline in order to learn all of the
names in a zone. Zone enumeration can be used to identify routers,
servers or other "things" that could then be targeted in more complex
attacks. An enumerated zone can also be a source of probable email
addresses for spam, or as a "key for multiple WHOIS queries to reveal
registrant data that many registries may have legal obligations to
protect" <xref target="RFC5155"/>.</t>

<t>All other DNSSEC mechanisms for authenticated denial of existence
either fail to preserve integrity against a compromised server, or
fail to prevent offline zone enumeration.</t>

<t>When offline signing with NSEC is used <xref target="RFC4034"/>, an NSEC chain of
all existing domain names in the zone is constructed and signed
offline. The chain is made of resource records (RRs), where each RR
represents two consecutive domain names in canonical order present in
the zone.  The authoritative server proves the non-existence of a name
by presenting a signed NSEC RR which covers the name.  Because the
authoritative server does not need not to know the private
zone-signing key, the integrity of the zone is protected even if the
server is compromised.  However, the NSEC chain allows for easy zone
enumeration: N queries to the server suffice to learn all N names in
the zone (see e.g., <xref target="nmap-nsec-enum"/>, <xref target="nsec3map"/>, and
<xref target="ldns-walk"/>).</t>

<t>When offline signing with NSEC3 is used <xref target="RFC5155"/>, the original
names in the NSEC chain are replaced by their cryptographic
hashes. Offline signing ensures that NSEC3 preserves integrity even if
an authoritative server is compromised. However, offline zone
enumeration is still possible with NSEC3 (see e.g., <xref target="nsec3walker"/>,
<xref target="nsec3gpu"/>), and is part of standard network reconnaissance tools
(e.g., <xref target="nmap-nsec3-enum"/>, <xref target="nsec3map"/>).</t>

<t>When online signing is used, the authoritative server holds the
private zone-signing key and uses this key to synthesize NSEC or NSEC3
responses on the fly (e.g.  NSEC3 White Lies (NSEC3-WL) or
Minimally-Covering NSEC, both described in <xref target="RFC7129"/>).  Because the
synthesized response only contains information about the queried name
(but not about any other name in the zone), offline zone enumeration
is not possible.  However, because the authoritative server holds the
private zone-signing key, integrity is lost if the authoritative
server is compromised.</t>

<texttable>
      <ttcol align='left'>Scheme</ttcol>
      <ttcol align='right'>Integrity vs network attacks?</ttcol>
      <ttcol align='right'>Integrity vs compromised auth. server?</ttcol>
      <ttcol align='right'>Prevents offline zone enumeration?</ttcol>
      <ttcol align='right'>Online crypto?</ttcol>
      <c>Unsigned</c>
      <c>NO</c>
      <c>NO</c>
      <c>YES</c>
      <c>NO</c>
      <c>NSEC</c>
      <c>YES</c>
      <c>YES</c>
      <c>NO</c>
      <c>NO</c>
      <c>NSEC3</c>
      <c>YES</c>
      <c>YES</c>
      <c>NO</c>
      <c>NO</c>
      <c>NSEC3-WL</c>
      <c>YES</c>
      <c>NO</c>
      <c>YES</c>
      <c>YES</c>
      <c>NSEC5</c>
      <c>YES</c>
      <c>YES</c>
      <c>YES</c>
      <c>YES</c>
</texttable>

<t>NSEC5 prevents offline zone enumeration and also protects integrity
even if a zone's authoritative server is compromised.  To do this,
NSEC5 replaces the unkeyed cryptographic hash function used in NSEC3
with a verifiable random function (VRF) <xref target="MRV99"/>.  A VRF is the
public-key version of a keyed cryptographic hash.  Only the holder of
the private VRF key can compute the hash, but anyone with public VRF
key can verify the correctness of the hash.</t>

<t>The public VRF key is distributed in an NSEC5KEY RR, similar to a
DNSKEY RR, and is used to verify NSEC5 hash values.  The private VRF
key is present on all authoritative servers for the zone, and is used
to compute hash values. For every query that elicits a negative
response, the authoritative server hashes the query on the fly using
the private VRF key, and also returns the corresponding precomputed
NSEC5 record(s). In contrast to the online signing approach
<xref target="RFC7129"/>, the private key that is present on all authoritative
servers for NSEC5 cannot be used to modify the zone contents.</t>

<t>Like online signing approaches, NSEC5 requires the authoritative
server to perform online public key cryptographic operations for every
query eliciting a denying response.  This is necessary; <xref target="nsec5"/>
proved that online cryptography is required to prevent offline zone
enumeration while still protecting the integrity of zone contents
against network attacks.</t>

<t>NSEC5 is not intended to replace NSEC or NSEC3. It is an alternative
mechanism for authenticated denial of existence.  This document
specifies NSEC5 based on the FIPS 186-3 P-256 elliptic curve and on
the Ed25519 elliptic curve. A formal cryptographic proof of security
for elliptic curve (EC) NSEC5 is in <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="requirements" title="Requirements">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The reader is assumed to be familiar with the basic DNS and DNSSEC
concepts described in <xref target="RFC1034"/>, <xref target="RFC1035"/>, <xref target="RFC4033"/>,
<xref target="RFC4034"/>, and <xref target="RFC4035"/>; subsequent RFCs that update them in
<xref target="RFC2136"/>, <xref target="RFC2181"/>, <xref target="RFC2308"/>, <xref target="RFC5155"/>, and <xref target="RFC7129"/>;
and DNS terms in <xref target="RFC7719"/>.</t>

<t>The reader should also be familiar with verifiable random functions (VRFs)
as defined in <xref target="I-D.goldbe-vrf"/>.</t>

<t>The following terminology is used through this document:</t>

<t><list style="hanging">
  <t hangText='Base32hex:'>
  The "Base 32 Encoding with Extended Hex Alphabet" as specified
in <xref target="RFC4648"/>. The padding characters ("=") are not
used in the NSEC5 specification.</t>
  <t hangText='Base64:'>
  The "Base 64 Encoding" as specified in <xref target="RFC4648"/>.</t>
  <t hangText='QNAME:'>
  The domain name being queried (query name).</t>
  <t hangText='Private NSEC5 key:'>
  The private key for the verifiable random function (VRF).</t>
  <t hangText='Public NSEC5 key:'>
  The public key for the VRF.</t>
  <t hangText='NSEC5 proof:'>
  A VRF proof. The holder of
the private NSEC5 key (e.g., authoritative server) can
compute the NSEC5 proof for an input domain name.
Anyone who knows the public VRF key can verify
that the NSEC5 proof corresponds to the input domain name.</t>
  <t hangText='NSEC5 hash:'>
  A cryptographic digest of an NSEC5 proof. If the NSEC5
proof is known, anyone can compute its corresponding NSEC5 hash.</t>
  <t hangText='NSEC5 algorithm:'>
  A triple of VRF algorithms that 
  compute an NSEC5 proof (VRF_prove),
  verify an NSEC5 proof (VRF_verify), 
  and process an NSEC5 proof to obtain its NSEC5 hash (VRF_proof2hash).</t>
</list></t>

</section>
</section>
<section anchor="backward-compatibility" title="Backward Compatibility">

<t>The specification describes a protocol change that is not backward
compatible with <xref target="RFC4035"/> and <xref target="RFC5155"/>. An NSEC5-unaware resolver
will fail to validate responses introduced by this document.</t>

<t>To prevent NSEC5-unaware resolvers from attempting to validate the
responses, new DNSSEC algorithms identifiers are introduced in
<xref target="iana_considerations"/> which alias existing algorithm numbers. The
zones signed according to this specification MUST use only these
algorithm identifiers, thus NSEC5-unaware resolvers will treat the
zone as insecure.</t>

</section>
<section anchor="how-nsec5-works" title="How NSEC5 Works">

<t>With NSEC5, the original domain name is hashed using a VRF <xref target="I-D.goldbe-vrf"/>
using the following steps:</t>

<t><list style="numbers">
  <t>The domain name is processed using a VRF keyed with the private
  NSEC5 key to obtain the NSEC5 proof.  Anyone who knows the public
  NSEC5 key, normally acquired via an NSEC5KEY RR, can verify that a
  given NSEC5 proof corresponds to a given domain name.</t>
  <t>The NSEC5 proof is then processed using a publicly-computable VRF
  proof2hash function to obtain the NSEC5 hash.  The NSEC5 hash can
  be computed by anyone who knows the input NSEC5 proof.</t>
</list></t>

<t>The NSEC5 hash determines the position of a domain name in an NSEC5
chain.</t>

<t>To sign a zone, the private NSEC5 key is used to compute the NSEC5
hashes for each name in the zone. These NSEC5 hashes are sorted in
canonical order <xref target="RFC4034"/>, and each consecutive pair forms an NSEC5
RR.  Each NSEC5 RR is signed offline using the private zone-signing
key.  The resulting signed chain of NSEC5 RRs is provided to all
authoritative servers for the zone, along with the private NSEC5 key.</t>

<t>To prove non-existence of a particular domain name in response to a
query, the server uses the private NSEC5 key to compute the NSEC5
proof and NSEC5 hash corresponding to the queried name.  The server
then identifies the NSEC5 RR that covers the NSEC5 hash, and responds
with this NSEC5 RR and its corresponding RRSIG signature RRset, as
well as a synthesized NSEC5PROOF RR that contains the NSEC5 proof
corresponding to the queried name.</t>

<t>To validate the response, the client verifies the following items:</t>

<t><list style="symbols">
  <t>The client uses the public NSEC5 key, normally acquired from the
NSEC5KEY RR, to verify that the NSEC5 proof in the NSEC5PROOF RR
corresponds to the queried name.</t>
  <t>The client uses the VRF proof2hash function to compute the NSEC5
hash from the NSEC5 proof in the NSEC5PROOF RR.  The client verifies
that the NSEC5 hash is covered by the NSEC5 RR.</t>
  <t>The client verifies that the NSEC5 RR is validly signed by the RRSIG
RRset.</t>
</list></t>

</section>
<section anchor="nsec5-algorithms" title="NSEC5 Algorithms">

<t>The algorithms used for NSEC5 authenticated denial are independent of
the algorithms used for DNSSEC signing. An NSEC5 algorithm defines how
the NSEC5 proof and the NSEC5 hash are computed and validated.</t>

<t>The NSEC5 proof corresponding to a name is computed using ECVRF_prove(), 
as specified in <xref target="I-D.goldbe-vrf"/>.
The input to ECVRF_prove() is 
a public NSEC5 key followed by
a private NSEC5 key followed by
an RR owner name in <xref target="RFC4034"/> canonical wire format.
The output NSEC5 proof is an octet string.</t>

<t>An NSEC5 hash corresponding to a name is computed from 
its NSEC5 proof using ECVRF_proof2hash(), as specified in <xref target="I-D.goldbe-vrf"/>.
The input to VRF_proof2hash() is 
an NSEC5 proof as an octet string. 
The output NSEC5 hash is either an octet string, or INVALID.</t>

<t>An NSEC5 proof for a name is verified using ECVRF_verify(),  as specified in
<xref target="I-D.goldbe-vrf"/>.
The input is the NSEC5 public key, 
followed by an NSEC5 proof as an octet string,
followed by an RR owner name in <xref target="RFC4034"/> canonical wire format.
The output is either VALID or INVALID.</t>

<t>This document defines the EC-P256-SHA256 NSEC5 algorithm as follows:</t>

<t><list style="symbols">
  <t>The VRF is the EC-VRF algorithm using the EC-VRF-P256-SHA256 
ciphersuite specified in <xref target="I-D.goldbe-vrf"/>.</t>
  <t>The public key format to be used in the NSEC5KEY RR is defined in
Section 4 of <xref target="RFC6605"/> and thus is the same as the format used to
store ECDSA public keys in DNSKEY RRs. <vspace />
[NOTE: This specification does 
not compress the elliptic curve point used for the public key! 
But we do compress curve points in every other place we use them with the 
P256 ECVRF.  We could save 31 octets in the NSEC5KEY record by encoding the 
public key with point compression!]</t>
</list></t>

<t>This document defines the EC-ED25519-SHA256 NSEC5 algorithm as follows:</t>

<t><list style="symbols">
  <t>The VRF is the EC-VRF algorithm using the EC-VRF-ED25519-SHA256
ciphersuite specified in <xref target="I-D.goldbe-vrf"/>.</t>
  <t>The public key format to be used in the NSEC5KEY RR is defined in
Section 3 of <xref target="RFC8080"/> and thus is the same as the format used to
store Ed25519 public keys in DNSKEY RRs.</t>
</list></t>

</section>
<section anchor="the-nsec5key-resource-record" title="The NSEC5KEY Resource Record">

<t>The NSEC5KEY RR stores a public NSEC5 key. The key allows clients to
validate an NSEC5 proof sent by a server.</t>

<section anchor="nsec5key-rdata-wire-format" title="NSEC5KEY RDATA Wire Format">

<t>The RDATA for the NSEC5KEY RR is as shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Algorithm   |                  Public Key                   /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>Algorithm is a single octet identifying the NSEC5 algorithm.</t>

<t>Public Key is a variable-sized field holding public key material for
NSEC5 proof verification.</t>

</section>
<section anchor="nsec5key-rdata-presentation-format" title="NSEC5KEY RDATA Presentation Format">

<t>The presentation format of the NSEC5KEY RDATA is as follows:</t>

<t>The Algorithm field is represented as an unsigned decimal integer.</t>

<t>The Public Key field is represented in Base64 encoding. Whitespace is
allowed within the Base64 text.</t>

</section>
</section>
<section anchor="the-nsec5-resource-record" title="The NSEC5 Resource Record">

<t>The NSEC5 RR provides authenticated denial of existence for an RRset
or domain name. One NSEC5 RR represents one piece of an NSEC5 chain,
proving existence of the owner name and non-existence of other domain
names in the part of the hashed domain space that is covered until the next
owner name hashed in the RDATA.</t>

<section anchor="nsec5-rdata-wire-format" title="NSEC5 RDATA Wire Format">

<t>The RDATA for the NSEC5 RR is as shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Key Tag            |     Flags     |  Next Length  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                     Next Hashed Owner Name                    /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
/                         Type Bit Maps                         /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>The Key Tag field contains the key tag value of the NSEC5KEY RR that
validates the NSEC5 RR, in network byte order. The value is computed
from the NSEC5KEY RDATA using the same algorithm used to
compute key tag values for DNSKEY RRs. This algorithm is defined in
<xref target="RFC4034"/>.</t>

<t>The Flags field is a single octet. The meaning of individual bits of
the field is defined in <xref target="nsec5_flags"/>.</t>

<t>The Next Length field is an unsigned single octet specifying the
length of the Next Hashed Owner Name field in octets.</t>

<t>The Next Hashed Owner Name field is a sequence of binary octets. It
contains an NSEC5 hash of the next domain name in the NSEC5 chain.</t>

<t>Type Bit Maps is a variable-sized field encoding RR types present at
the original owner name matching the NSEC5 RR. The format of the field
is equivalent to the format used in the NSEC3 RR, described in
<xref target="RFC5155"/>.</t>

</section>
<section anchor="nsec5_flags" title="NSEC5 Flags Field">

<t>The following one-bit NSEC5 flags are defined:</t>

<figure><artwork><![CDATA[
 0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+-+
|           |W|O|
+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style='empty'>
  <t>O - Opt-Out flag</t>
</list></t>

<t><list style='empty'>
  <t>W - Wildcard flag</t>
</list></t>

<t>All the other flags are reserved for future use and MUST be zero.</t>

<t>The Opt-Out flag has the same semantics as in NSEC3. The definition
and considerations in <xref target="RFC5155"/> are valid, except that NSEC3 is
replaced by NSEC5.</t>

<t>The Wildcard flag indicates that a wildcard synthesis is possible at
the original domain name level (i.e., there is a wildcard node
immediately descending from the immediate ancestor of the original
domain name).  The purpose of the Wildcard flag is to reduce the
maximum number of RRs required for an authenticated denial of
existence proof from (at most) three to (at most) two, 
as originally described in <xref target="I-D.gieben-nsec4"/>
Section 7.2.1.</t>

</section>
<section anchor="nsec5-rdata-presentation-format" title="NSEC5 RDATA Presentation Format">

<t>The presentation format of the NSEC5 RDATA is as follows:</t>

<t>The Key Tag field is represented as an unsigned decimal integer.</t>

<t>The Flags field is represented as an unsigned decimal integer.</t>

<t>The Next Length field is not represented.</t>

<t>The Next Hashed Owner Name field is represented as a sequence of
case-insensitive Base32hex digits without any whitespace and without
padding.</t>

<t>The Type Bit Maps representation is equivalent to the representation
used in NSEC3 RR, described in <xref target="RFC5155"/>.</t>

</section>
</section>
<section anchor="the-nsec5proof-resource-record" title="The NSEC5PROOF Resource Record">

<t>The NSEC5PROOF record is not to be included in the zone file.  The
NSEC5PROOF record contains the NSEC5 proof, proving the position of
the owner name in an NSEC5 chain.</t>

<section anchor="nsec5proof_rdata" title="NSEC5PROOF RDATA Wire Format">

<t>The RDATA for the NSEC5PROOF RR is shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Key Tag            |        Owner Name Hash        /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>Key Tag field contains the key tag value of the NSEC5KEY RR that
validates the NSEC5PROOF RR, in network byte order.</t>

<t>Owner Name Hash is a variable-sized sequence of binary octets encoding
the NSEC5 proof of the owner name of the RR.</t>

</section>
<section anchor="nsec5proof-rdata-presentation-format" title="NSEC5PROOF RDATA Presentation Format">

<t>The presentation format of the NSEC5PROOF RDATA is as follows:</t>

<t>The Key Tag field is represented as an unsigned decimal integer.</t>

<t>The Owner Name Hash is represented in Base64 encoding. Whitespace is
allowed within the Base64 text.</t>

</section>
</section>
<section anchor="nsec5_proofs" title="Types of Authenticated Denial of Existence with NSEC5">

<t>This section summarizes all possible types of authenticated denial of
existence.  For each type the following lists are included:</t>

<t><list style="numbers">
  <t>Facts to prove: the minimum amount of information that an
  authoritative server must provide to a client to assure the client
  that the response content is valid.</t>
  <t>Authoritative server proofs: the names for which the NSEC5PROOF RRs
  are synthesized and added into the response along the NSEC5 RRs
  matching or covering each such name. These records together prove
  the listed facts.</t>
  <t>Validator checks: the individual checks that a validating server is
  required to perform on a response. The response content is
  considered valid only if all of the checks pass.</t>
</list></t>

<t>If NSEC5 is said to match a domain name, the owner name of the NSEC5
RR has to be equivalent to an NSEC5 hash of that domain name. If an
NSEC5 RR is said to cover a domain name, the NSEC5 hash of the domain
name must sort in canonical order between that NSEC5 RR's Owner Name
and Next Hashed Owner Name.</t>

<section anchor="name-error-responses" title="Name Error Responses">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>Non-existence of the domain name that explictly matches the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of the wildcard that matches the QNAME.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for closest encloser and matching NSEC5 RR.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t><list style='empty'>
  <t>The QNAME does not fall into a delegation.</t>
</list></t>

<t><list style='empty'>
  <t>The QNAME does not fall into a DNAME redirection.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Closest encloser is in the zone.</t>
</list></t>

<t><list style='empty'>
  <t>The NSEC5 RR matching the closest encloser has its Wildcard flag cleared.</t>
</list></t>

<t><list style='empty'>
  <t>The NSEC5 RR matching the closest encloser does not have NS without SOA in the Type Bit Map.</t>
</list></t>

<t><list style='empty'>
  <t>The NSEC5 RR matching the closest encloser does not have DNAME in
  the Type Bit Map.</t>
</list></t>

<!--> Next closer name is derived correctly.-->

<t><list style='empty'>
  <t>Next closer name is not in the zone.</t>
</list></t>

</section>
<section anchor="no-data-responses" title="No Data Responses">

<t>The processing of a No Data response for DS QTYPE differs if the
Opt-Out is in effect. For DS QTYPE queries, the validator has two
possible checking paths.  The correct path can be simply decided by
inspecting if the NSEC5 RR in the response matches the QNAME.</t>

<t>Note that the Opt-Out is valid only for DS QTYPE queries.</t>

<section anchor="no-data-response-opt-out-not-in-effect" title="No Data Response, Opt-Out Not In Effect">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>Existence of an RRset explicitly matching the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of QTYPE RRset matching the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of CNAME RRset matching the QNAME.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for the QNAME and matching NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>QNAME is in the zone.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching the QNAME does not have QTYPE in Type Bit Map.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching the QNAME does not have CNAME in Type Bit Map.</t>
</list></t>

</section>
<section anchor="no-data-response-opt-out-in-effect" title="No Data Response, Opt-Out In Effect">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>The delegation is not covered by the NSEC5 chain.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for closest provable encloser and matching NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Closest provable encloser is in zone.</t>
</list></t>

<t><list style='empty'>
  <t>Closest provable encloser covers (not matches) the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching the closest provable encloser has Opt-Out flag set.</t>
</list></t>

</section>
</section>
<section anchor="wildcard-responses" title="Wildcard Responses">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>A signed positive response to the QNAME demonstrating the existence of the wildcard (label count in RRSIG is less than in QNAME), and also providing closest encloser name.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of the domain name matching the QNAME.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>A signed positive response for the wildcard expansion of the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<!--> Next closer name is derived correctly.-->

<t><list style='empty'>
  <t>Next closer name is not in the zone.</t>
</list></t>

</section>
<section anchor="wildcard-no-data-responses" title="Wildcard No Data Responses">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>The existence of the wildcard at the closest encloser to the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of both the QTYPE and of the CNAME type that matches QNAME via wildcard expansion.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for source of synthesis (i.e., wildcard at closest
encloser) and matching NSEC5 RR.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Closest encloser to the QNAME exists.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching the wildcard label prepended to the closest encloser, and which does not have the bits corresponding to the QTYPE and CNAME types set it the type bitmap.</t>
</list></t>

</section>
</section>
<section anchor="authoritative-server-considerations" title="Authoritative Server Considerations">

<section anchor="zone_signing" title="Zone Signing">

<t>Zones using NSEC5 MUST satisfy the same properties as described in
Section 7.1 of <xref target="RFC5155"/>, with NSEC3 replaced by NSEC5. In addition,
the following conditions MUST be satisfied as well:</t>

<t><list style="symbols">
  <t>If the original owner name has a wildcard label immediately
descending from the original owner name, the corresponding NSEC5 RR
MUST have the Wildcard flag set in the Flags field. Otherwise, the
flag MUST be cleared.</t>
  <t>The zone apex MUST include an NSEC5KEY RRset containing a NSEC5
public key allowing verification of the current NSEC5 chain.</t>
</list></t>

<t>The following steps describe one possible method to properly add
required NSEC5 related records into a zone. This is not the only such
existing method.</t>

<t><list style="numbers">
  <t>Select an algorithm for NSEC5.  Generate the public and private NSEC5 keys.</t>
  <t>Add an NSEC5KEY RR into the zone apex containing the public NSEC5 key.</t>
  <t>For each unique original domain name in the zone and each empty
  non-terminal, add an NSEC5 RR. If Opt-Out is used, owner names of
  unsigned delegations MAY be excluded.  <vspace blankLines='1'/>
A. The owner name of the NSEC5 RR is the NSEC5 hash of the
   original owner name encoded in Base32hex without padding,
   prepended as a single label to the zone name.  <vspace blankLines='1'/>
B. Set the Key Tag field to be the key tag corresponding
   to the public NSEC5 key.  <vspace blankLines='1'/>
C. Clear the Flags field. If Opt-Out is being used, set the Opt-Out
   flag. If there is a wildcard label directly descending from the
   original domain name, set the Wildcard flag. Note that the
   wildcard can be an empty non-terminal (i.e., the wildcard synthesis
   does not take effect and therefore the flag is not to be set).  <vspace blankLines='1'/>
D. Set the Next Length field to a value determined by the used
   NSEC5 algorithm. Leave the Next Hashed Owner Name field blank.  <vspace blankLines='1'/>
E. Set the Type Bit Maps field based on the RRsets present at the
   original owner name.</t>
  <t>Sort the set of NSEC5 RRs into canonical order.</t>
  <t>For each NSEC5 RR, set the Next Hashed Owner Name field by using
  the owner name of the next NSEC5 RR in the canonical order. If the
  updated NSEC5 is the last NSEC5 RR in the chain, the owner name of the
  first NSEC5 RR in the chain is used instead.</t>
</list></t>

<t>The NSEC5KEY and NSEC5 RRs MUST have the same class as the zone SOA
RR.  Also the NSEC5 RRs SHOULD have the same TTL value as the SOA
minimum TTL field.</t>

<t>Notice that a use of Opt-Out is not indicated in the zone. This does
not affect the ability of a server to prove insecure delegations. The
Opt-Out MAY be part of the zone-signing tool configuration.</t>

<section anchor="precompute" title="Precomputing Closest Provable Encloser Proofs">

<t>Per <xref target="nsec5_proofs"/>, the worst-case scenario when answering a negative 
query with NSEC5 requires authoritative server to respond with two 
NSEC5PROOF RRs and
two NSEC5 RRs. One pair of NSEC5PROOF and NSEC5
RRs corresponds to the closest provable encloser, and the other pair
corresponds to the next closer name.  The NSEC5PROOF corresponding to
the next closer name MUST be computed on the fly by the authoritative
server when responding to the query. However, the NSEC5PROOF
corresponding to the closest provable encloser MAY be precomputed and
stored as part of zone signing.</t>

<t>Precomputing NSEC5PROOF RRs can halve the number of online
cryptographic computations required when responding to a negative
query. NSEC5PROOF RRs MAY be precomputed as part of zone signing as
follows: For each NSEC5 RR, compute an NSEC5PROOF RR corresponding to
the original owner name of the NSEC5 RR. The content of the
precomputed NSEC5PROOF record MUST be the same as if the record was
computed on the fly when serving the zone.  NSEC5PROOF records are not
part of the zone and SHOULD be stored separately from the zone file.</t>

</section>
</section>
<section anchor="zone-serving" title="Zone Serving">

<t>This specification modifies DNSSEC-enabled DNS responses generated by
authoritative servers. In particular, it replaces use of NSEC or NSEC3
RRs in such responses with NSEC5 RRs and adds NSEC5PROOF RRs.</t>

<t>According to the type of a response, an authoritative server MUST
include NSEC5 RRs in the response, as defined in <xref target="nsec5_proofs"/>. For
each NSEC5 RR in the response, a corresponding RRSIG RRset and an
NSEC5PROOF MUST be added as well. The NSEC5PROOF RR has its owner name
set to the domain name required according to the description in 
<xref target="nsec5_proofs"/>. The
class and TTL of the NSEC5PROOF RR MUST be the same as the class and
TTL value of the corresponding NSEC5 RR. The RDATA payload of the
NSEC5PROOF is set according to the description in
<xref target="nsec5proof_rdata"/>.</t>

<t>Notice that the NSEC5PROOF owner name can be a wildcard (e.g., source
of synthesis proof in wildcard No Data responses). The name also
always matches the domain name required for the proof while the NSEC5
RR may only cover (not match) the name in the proof (e.g., closest
encloser in Name Error responses).</t>

<t>If NSEC5 is used, an answering server MUST use exactly one NSEC5 chain
for one signed zone.</t>

<t>NSEC5 MUST NOT be used in parallel with NSEC, NSEC3, or any other
authenticated denial of existence mechanism that allows for
enumeration of zone contents, as this would defeat a principal
security goal of NSEC5.</t>

<t>Similarly to NSEC3, the owner names of NSEC5 RRs are not represented
in the NSEC5 chain and therefore NSEC5 records deny their own
existence. The desired behavior caused by this paradox is the same as
described in Section 7.2.8 of <xref target="RFC5155"/>.</t>

</section>
<section anchor="nsec5key-rollover-mechanism" title="NSEC5KEY Rollover Mechanism">

<t>Replacement of the NSEC5 key implies generating a new NSEC5 chain. The
NSEC5KEY rollover mechanism is similar to "Pre-Publish Zone Signing
Key Rollover" as specified in <xref target="RFC6781"/>. The NSEC5KEY rollover MUST
be performed as a sequence of the following steps:</t>

<t><list style="numbers">
  <t>A new public NSEC5 key is added into the NSEC5KEY RRset in the zone
  apex.</t>
  <t>The old NSEC5 chain is replaced by a new NSEC5 chain constructed
  using the new key. This replacement MUST happen as a single atomic
  operation; the server MUST NOT be responding with RRs from both the
  new and old chain at the same time.</t>
  <t>The old public key is removed from the NSEC5KEY RRset in the zone
  apex.</t>
</list></t>

<t>The minimum delay between steps 1 and 2 MUST be the time it takes for
the data to propagate to the authoritative servers, plus the TTL value
of the old NSEC5KEY RRset.</t>

<t>The minimum delay between steps 2 and 3 MUST be the time it takes for
the data to propagate to the authoritative servers, plus the maximum
zone TTL value of any of the data in the previous version of the zone.</t>

</section>
<section anchor="secondary-servers" title="Secondary Servers">

<t>This document does not define mechanism to distribute private NSEC5 keys.
See <xref target="keyleak"/> for security considerations for private NSEC5 keys.</t>

</section>
<section anchor="zones-using-unknown-nsec5-algorithms" title="Zones Using Unknown NSEC5 Algorithms">

<t>Zones that are signed with an unknown NSEC5 algorithm or with an
unavailable private NSEC5 key cannot be effectively served. Such zones
SHOULD be rejected when loading and servers SHOULD respond with
RCODE=2 (Server failure) when handling queries that would fall under
such zones.</t>

</section>
<section anchor="dynamic-updates" title="Dynamic Updates">

<t>A zone signed using NSEC5 MAY accept dynamic updates <xref target="RFC2136"/>.  The
changes to the zone MUST be performed in a way that ensures that the
zone satisfies the properties specified in <xref target="zone_signing"/> at any
time.  The process described in <xref target="RFC5155"/> Section 7.5 describes how
to handle the issues surrounding the handling of empty non-terminals
as well as Opt-Out.</t>

<t>It is RECOMMENDED that the server rejects all updates containing
changes to the NSEC5 chain and its related RRSIG RRs, and performs
itself any required alternations of the NSEC5 chain induced by the
update.  Alternatively, the server MUST verify that all the properties
are satisfied prior to performing the update atomically.</t>

</section>
</section>
<section anchor="resolver-considerations" title="Resolver Considerations">

<t>The same considerations as described in Section 9 of <xref target="RFC5155"/> for
NSEC3 apply to NSEC5. In addition, as NSEC5 RRs can be validated only
with appropriate NSEC5PROOF RRs, the NSEC5PROOF RRs MUST be all
together cached and included in responses with NSEC5 RRs.</t>

</section>
<section anchor="validator-considerations" title="Validator Considerations">

<section anchor="validating-responses" title="Validating Responses">

<t>The validator MUST ignore NSEC5 RRs with Flags field values other than
the ones defined in <xref target="nsec5_flags"/>.</t>

<t>The validator MAY treat responses as bogus if the response contains
NSEC5 RRs that refer to a different NSEC5KEY.</t>

<t>According to a type of a response, the validator MUST verify all
conditions defined in <xref target="nsec5_proofs"/>. Prior to making decision based
on the content of NSEC5 RRs in a response, the NSEC5 RRs MUST be
validated.</t>

<t>To validate a denial of existence, public NSEC5 keys for the zone are
required in addition to DNSSEC public keys. Similarly to DNSKEY RRs,
the NSEC5KEY RRs are present at the zone apex.</t>

<t>The NSEC5 RR is validated as follows:</t>

<t><list style="numbers">
  <t>Select a correct public NSEC5 key to validate the NSEC5 proof. The
  Key Tag value of the NSEC5PROOF RR must match with the key tag value
  computed from the NSEC5KEY RDATA.</t>
  <t>Validate the NSEC5 proof present in the NSEC5PROOF Owner Name Hash
  field using the public NSEC5 key. If there are multiple NSEC5KEY RRs
  matching the key tag, at least one of the keys must validate the
  NSEC5 proof.</t>
  <t>Compute the NSEC5 hash value from the NSEC5 proof and check if the
  response contains NSEC5 RR matching or covering the computed NSEC5
  hash.  The TTL values of the NSEC5 and NSEC5PROOF RRs must be the
  same.</t>
  <t>Validate the signature on the NSEC5 RR.</t>
</list></t>

<t>If the NSEC5 RR fails to validate, it MUST be ignored. If some of the
conditions required for an NSEC5 proof are not satisfied, the response
MUST be treated as bogus.</t>

<t>Notice that determining the closest encloser and next closer name in
NSEC5 is easier than in NSEC3. NSEC5 and NSEC5PROOF RRs are always
present in pairs in responses and the original owner name of the NSEC5
RR matches the owner name of the NSEC5PROOF RR.</t>

</section>
<section anchor="validating-referrals-to-unsigned-subzones" title="Validating Referrals to Unsigned Subzones">

<t>The same considerations as defined in Section 8.9 of <xref target="RFC5155"/> for
NSEC3 apply to NSEC5.</t>

</section>
<section anchor="responses-with-unknown-nsec5-algorithms" title="Responses With Unknown NSEC5 Algorithms">

<t>A validator MUST ignore NSEC5KEY RRs with unknown NSEC5
algorithms. The practical result of this is that zones signed with
unknown algorithms will be considered bogus.</t>

</section>
</section>
<section anchor="special-considerations" title="Special Considerations">

<section anchor="transition-mechanism" title="Transition Mechanism">

<t>[TODO: The following information will be covered.]</t>

<t><list style="symbols">
  <t>Transition to NSEC5 from NSEC/NSEC3</t>
  <t>Transition from NSEC5 to NSEC/NSEC3</t>
  <t>Transition to new NSEC5 algorithms</t>
</list></t>

</section>
<section anchor="private-nsec5-keys" title="Private NSEC5 keys">

<t>This document does not define a format to store private NSEC5
keys. Use of a standardized and adopted format is RECOMMENDED.</t>

<t>The private NSEC5 key MAY be shared between multiple zones, however a
separate key is RECOMMENDED for each zone.</t>

</section>
<section anchor="domain-name-length-restrictions" title="Domain Name Length Restrictions">

<t>NSEC5 creates additional restrictions on domain name lengths. In
particular, zones with names that, when converted into hashed owner
names, exceed the 255 octet length limit imposed by <xref target="RFC1035"/> cannot
use this specification.</t>

<t>The actual maximum length of a domain name depends on the length of
the zone name and the NSEC5 algorithm used.</t>

<t>All NSEC5 algorithms defined in this document use 256-bit NSEC5 hash
values.  Such a value can be encoded in 52 characters in Base32hex
without padding.  When constructing the NSEC5 RR owner name, the
encoded hash is prepended to the name of the zone as a single label
which includes the length field of a single octet.  The maximum length
of the zone name in wire format using the 256-bit hash is therefore
202 octets (255 - 53).</t>

</section>
</section>
<section anchor="implementation-status" title="Implementation Status">

<t>NSEC5 has been implemented for the Knot DNS authoritative server
(version 1.6.4) and the Unbound recursive server (version 1.5.9).  The
implementations did not introduce additional library dependencies; all
cryptographic primitives are already present in OpenSSL v1.0.2j, which
is used by both implementations.  The implementations support the full
spectrum of negative responses, (i.e., NXDOMAIN, NODATA, Wildcard,
Wildcard NODATA, and unsigned delegation) using the EC-P256-SHA256
algorithm. The code is deliberately modular, so that the
EC-ED25519-SHA256 algorithm could be implemented by using the Ed25519
elliptic curve <xref target="RFC8080"/> as a drop-in replacement for the P256
elliptic curve.  The authoritative server implements the optimization
from <xref target="precompute"/> to precompute the NSEC5PROOF RRs matching each
NSEC5 record.</t>

</section>
<section anchor="performance-considerations" title="Performance Considerations">

<t>The performance of NSEC5 has been evaluated in <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<section anchor="zea" title="Zone Enumeration Attacks">

<t>NSEC5 is robust to zone enumeration via offline dictionary attacks by
any attacker that does not know the private NSEC5 key. Without the
private NSEC5 key, that attacker cannot compute the NSEC5 proof that
corresponds to a given domain name.  The only way it can learn the
NSEC5 proof value for a domain name is by querying the authoritative
server for that name. Without the NSEC5 proof value, the attacker
cannot learn the NSEC5 hash value. Thus, even an attacker that
collects the entire chain of NSEC5 RR for a zone cannot use offline
attacks to "reverse" that NSEC5 hash values in these NSEC5 RR and thus
learn which names are present in the zone.  A formal cryptographic
proof of this property is in <xref target="nsec5"/> and <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="keyleak" title="Compromise of the Private NSEC5 Key">

<t>NSEC5 requires authoritative servers to hold the private NSEC5 key,
but not the private zone-signing keys or the private key-signing keys
for the zone.</t>

<t>The private NSEC5 key cannot be used to modify zone contents, because
zone contents are signed using the private zone-signing key.  As such,
a compromise of the private NSEC5 key does not compromise the
integrity of the zone.  An adversary that learns the private NSEC5 key
can, however, perform offline zone-enumeration attacks.  For this
reason, the private NSEC5 key need only be as secure as the DNSSEC
records whose privacy (against zone enumeration) is being protected by
NSEC5.  A formal cryptographic proof of this property is in <xref target="nsec5"/>
and <xref target="nsec5ecc"/>.</t>

<t>To preserve this property of NSEC5, the private NSEC5 key MUST be
different from the private zone-signing keys or key-signing keys for
the zone.</t>

</section>
<section anchor="keylen" title="Key Length Considerations">

<t>The NSEC5 key must be long enough to withstand attacks for as long as
the privacy of the zone contents is important. Even if the NSEC5 key
is rolled frequently, its length cannot be too short, because zone
privacy may be important for a period of time longer than the lifetime
of the key.  For example, an attacker might collect the entire chain
of NSEC5 RR for the zone over one short period, and then, later (even
after the NSEC5 key expires) perform an offline dictionary attack that
attempts to reverse the NSEC5 hash values present in the NSEC5 RRs.
This is in contrast to zone-signing and key-signing keys used in
DNSSEC; these keys, which ensure the authenticity and integrity of the
zone contents, need to remain secure only during their lifetime.</t>

</section>
<section anchor="hashcol" title="NSEC5 Hash Collisions">

<t>If the NSEC5 hash of a QNAME collides with the NSEC5 hash of the owner
name of an NSEC5 RR, it will be impossible to prove the non-existence
of the colliding QNAME. However, the NSEC5 VRFs ensure that obtaining
such a collision is as difficult as obtaining a collision in the
SHA-256 hash function, requiring approximately 2^128 effort. Note that
DNSSEC already relies on the assumption that a cryptographic hash
function is collision-resistant, since these hash functions are used
for generating and validating signatures and DS RRs. See also the
discussion on key lengths in <xref target="nsec5"/>.</t>

</section>
</section>
<section anchor="iana_considerations" title="IANA Considerations">

<t>This document updates the IANA registry "Domain Name System (DNS)
Parameters" in subregistry "Resource Record (RR) TYPEs", by defining
the following new RR types:</t>

<t><list style='empty'>
  <t>NSEC5KEY   value TBD.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5      value TBD.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF value TBD.</t>
</list></t>

<t>This document creates a new IANA registry for NSEC5 algorithms.  This
registry is named "DNSSEC NSEC5 Algorithms". The initial content of
the registry is:</t>

<t><list style='empty'>
  <t>0     is Reserved.</t>
</list></t>

<t><list style='empty'>
  <t>1     is EC-P256-SHA256.</t>
</list></t>

<t><list style='empty'>
  <t>2     is EC-ED25519-SHA256.</t>
</list></t>

<t><list style='empty'>
  <t>3-255 is Available for assignment.</t>
</list></t>

<t>This document updates the IANA registry "DNS Security Algorithm
Numbers" by defining following aliases:</t>

<t><list style='empty'>
  <t>TBD is NSEC5-ECDSAP256SHA256 alias for ECDSAP256SHA256 (13).</t>
</list></t>

<t><list style='empty'>
  <t>TBD is NSEC5-ED25519, alias for ED25519 (15).</t>
</list></t>

</section>
<section anchor="contributors" title="Contributors">

<t>This document would not be possible without help of
Moni Naor (Weizmann Institute),
Sachin Vasant (Cisco Systems),
Leonid Reyzin (Boston University), and
Asaf Ziv (Weizmann Institute)
who contributed to the design of NSEC5.
Ondrej Sury (CZ.NIC Labs), and
Duane Wessels (Verisign Labs)
provided advice on the implementation of NSEC5, and assisted with
evaluating its performance.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1034;
&RFC1035;
&RFC2119;
&RFC2136;
&RFC2181;
&RFC2308;
&RFC4033;
&RFC4034;
&RFC4035;
&RFC4648;
&RFC5114;
&RFC5155;
&RFC6234;
&RFC6605;
&RFC7748;
&RFC8080;
&I-D.goldbe-vrf;
<reference anchor="FIPS-186-3" >
  <front>
    <title>Digital Signature Standard (DSS)</title>
    <author >
      <organization>National Institute for Standards and Technology</organization>
    </author>
    <date year="2009" month="June"/>
  </front>
  <seriesInfo name="FIPS" value="PUB 186-3"/>
</reference>


    </references>

    <references title='Informative References'>

&RFC6781;
&RFC7129;
&RFC7719;
&I-D.gieben-nsec4;
<reference anchor="nsec5" target="https://eprint.iacr.org/2014/582.pdf">
  <front>
    <title>NSEC5: Provably Preventing DNSSEC Zone Enumeration</title>
    <author initials="S." surname="Goldberg">
      <organization></organization>
    </author>
    <author initials="M." surname="Naor">
      <organization></organization>
    </author>
    <author initials="D." surname="Papadopoulos">
      <organization></organization>
    </author>
    <author initials="L." surname="Reyzin">
      <organization></organization>
    </author>
    <author initials="S." surname="Vasant">
      <organization></organization>
    </author>
    <author initials="A." surname="Ziv">
      <organization></organization>
    </author>
    <date year="2014" month="July"/>
  </front>
  <seriesInfo name="in" value="NDSS'15"/>
</reference>
<reference anchor="nsec5ecc" target="https://eprint.iacr.org/2017/099.pdf">
  <front>
    <title>Can NSEC5 be Practical for DNSSEC Deployments?</title>
    <author initials="D." surname="Papadopoulos">
      <organization></organization>
    </author>
    <author initials="D." surname="Wessels">
      <organization></organization>
    </author>
    <author initials="S." surname="Huque">
      <organization></organization>
    </author>
    <author initials="J." surname="Vcelak">
      <organization></organization>
    </author>
    <author initials="M." surname="Naor">
      <organization></organization>
    </author>
    <author initials="L." surname="Reyzin">
      <organization></organization>
    </author>
    <author initials="S." surname="Goldberg">
      <organization></organization>
    </author>
    <date year="2017" month="February"/>
  </front>
  <seriesInfo name="in" value="ePrint Cryptology Archive 2017/099"/>
</reference>
<reference anchor="nsec3gpu" >
  <front>
    <title>GPU-Based NSEC3 Hash Breaking</title>
    <author initials="M." surname="Wander">
      <organization></organization>
    </author>
    <author initials="L." surname="Schwittmann">
      <organization></organization>
    </author>
    <author initials="C." surname="Boelmann">
      <organization></organization>
    </author>
    <author initials="T." surname="Weis">
      <organization></organization>
    </author>
    <date year="2014"/>
  </front>
  <seriesInfo name="in" value="IEEE Symp. Network Computing and Applications (NCA)"/>
</reference>
<reference anchor="nsec3walker" target="http://dnscurve.org/nsec3walker.html">
  <front>
    <title>Nsec3 walker</title>
    <author initials="D.J." surname="Bernstein">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nmap-nsec-enum" target="https://nmap.org/nsedoc/scripts/dns-nsec-enum.html">
  <front>
    <title>nmap: dns-nsec-enum</title>
    <author initials="J.R." surname="Bond">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nmap-nsec3-enum" target="https://nmap.org/nsedoc/scripts/dns-nsec3-enum.html">
  <front>
    <title>nmap: dns-nsec3-enum</title>
    <author initials="A." surname="Nikolic">
      <organization></organization>
    </author>
    <author initials="J.R." surname="Bond">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nsec3map" target="https://github.com/anonion0/nsec3map.">
  <front>
    <title>nsec3map with John the Ripper plugin</title>
    <author >
      <organization>anonion0</organization>
    </author>
    <date year="2015"/>
  </front>
</reference>
<reference anchor="ldns-walk" target="http://git.nlnetlabs.nl/ldns/tree/examples/ldns-walk.c">
  <front>
    <title>ldns</title>
    <author >
      <organization>NLNetLabs</organization>
    </author>
    <date year="2015"/>
  </front>
</reference>
<reference anchor="MRV99" >
  <front>
    <title>Verifiable Random Functions</title>
    <author initials="S." surname="Michali">
      <organization></organization>
    </author>
    <author initials="M." surname="Rabin">
      <organization></organization>
    </author>
    <author initials="S." surname="Vadhan">
      <organization></organization>
    </author>
    <date year="1999"/>
  </front>
  <seriesInfo name="in" value="FOCS"/>
</reference>


    </references>


<section anchor="examples" title="Examples">

<t>We use small DNS zone 
to illustrate how denying responses are handled with NSEC5.  For brevity,
the class is not shown (defaults to IN) and the SOA record is shortened,
resulting in the following zone file:</t>

<figure><artwork><![CDATA[
example.org.        SOA ( ... )  
example.org.        NS  a.example.org

a.example.org.      A 192.0.2.1  

c.example.org.      A 192.0.2.2  
c.example.org.      TXT "c record"  

d.example.org.      NS ns1.d.example.org

ns1.d.example.org.  A 192.0.2.4

g.example.org.      A 192.0.2.1  
g.example.org.      TXT "g record"

*.a.example.org.    TXT "wildcard record"
]]></artwork></figure>

<t>Notice the delegation to an unsigned zone d.example.org served 
by ns1.d.example.org.  (Note: if the d.example.org zone was signed, 
then the example.org zone have a DS record for d.example.org.)</t>

<t>Next we present example responses. All cryptographic values are
shortened as indicated by "&#8230;" and ADDITIONAL sections have been
removed.</t>

<section anchor="name-error-example" title="Name Error Example">

<t>Consider a query for a type A record for a.b.c.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of closest encloser c.example.org.</t>
  <t>Non-existence of wildcard at closest encloser *.c.example.org.</t>
  <t>Non-existence of next closer b.c.example.org.</t>
</list></t>

<!-- tale should figure out the right way to keep this on one page -->
<t>To do this, the server returns:</t>

<figure><artwork><![CDATA[
;; ->>HEADER<<- opcode: QUERY; status: NXDOMAIN; id: 5937 
 
;; QUESTION SECTION:  
;; a.b.c.example.org.           IN      A

;; AUTHORITY SECTION:  
example.org.         3600 IN SOA a.example.org. hostmaster.example.org. (  
            2010111214 21600 3600 604800 86400 )

example.org.         3600 IN RRSIG  SOA 16 2 3600 (  
            20170412024301 20170313024301 5137 example.org. rT231b1rH... )
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for c.example.com. It's RDATA is the NSEC5 proof 
corresponding to c.example.com.  (NSEC5 proofs are randomized values,
because NSEC5 proof values are computed uses the EC-VRF 
from <xref target="I-D.goldbe-vrf" />.)
Per <xref target="precompute"/>, this NSEC5PROOF RR may be precomputed.</t>

<figure><artwork><![CDATA[
c.example.org.      86400 IN NSEC5PROOF 48566 Amgn22zUiZ9JVyaT...
]]></artwork></figure>

<t>This is a signed NSEC5 RR "matching" c.example.org, which proves 
the existence of closest encloser c.example.org.
The NSEC5 RR has its owner name equal to the
NSEC5 hash of c.example.org, which is O4K89V.  (NSEC5 hash values are 
deterministic given the public NSEC5 key.)
The NSEC5 RR also has its Wildcard flag cleared (see the "0" after the key ID 
48566). This proves the non-existence of the wildcard 
at the closest encloser *.c.example.com.
NSEC5 RRs are  precomputed.</t>

<figure><artwork><![CDATA[
o4k89v.example.org. 86400 IN NSEC5   48566 0 0O49PI A TXT RRSIG  
o4k89v.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (  
            20170412024301 20170313024301 5137 example.org. zDNTSMQNlz... )
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for b.c.example.org. It's RDATA is the NSEC5 proof 
corresponding to b.c.example.com.  This NSEC5PROOF RR must be computed on-the-fly.</t>

<figure><artwork><![CDATA[
b.c.example.org.    86400 IN NSEC5PROOF 48566 AuvvJqbUcEs8sCpY...
]]></artwork></figure>

<t>This is a signed  NSEC5 RR "covering" b.c.example.org, which proves the
non-existence of the next closer name b.c.example.org
The NSEC5 hash of b.c.example.org, which is AO5OF, sorts in canonical 
order between the "covering" NSEC5 RR's Owner Name (which is 0O49PI)
and Next Hashed Owner Name (which is BAPROH).</t>

<figure><artwork><![CDATA[
0o49pi.example.org. 86400 IN NSEC5      48566 0 BAPROH (
            NS SOA RRSIG DNSKEY NSEC5KEY )

0o49pi.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
            20170412024301 20170313024301 5137 example.org. 4HT1uj1YlMzO)

[TODO: Add discussion of CNAME and DNAME to the example?]
]]></artwork></figure>

</section>
<section anchor="no-data-example" title="No Data Example">

<t>Consider a query for a type MX record for c.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of c.example.org. for any type other than MX or CNAME</t>
</list></t>

<t>To do this, the server returns:</t>

<figure><artwork><![CDATA[
;; ->>HEADER<<- opcode: QUERY; status: NOERROR; id: 38781

;; QUESTION SECTION:
;; c.example.org.    IN MX

;; AUTHORITY SECTION:
example.org.    3600 IN SOA     a.example.org. hostmaster.example.org. (
            2010111214 21600 3600 604800 86400 )

example.org.    3600 IN RRSIG   SOA 16 2 3600 20170412024301 20170313024301 5137 example.org. /rT231b1rH/p
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for c.example.com. Its RDATA corresponds to the NSEC5
proof for c.example.com. which is a randomized value.  Per <xref target="precompute"/>, this
NSEC5PROOF RR may be precomputed.</t>

<figure><artwork><![CDATA[
c.example.org. 86400 IN NSEC5PROOF 48566 Amgn22zUiZ9JVyaT
]]></artwork></figure>

<t>This is a signed NSEC5 RR "matching" c.example.org. with CNAME and 
MX Type Bits cleared and its TXT Type Bit set. This NSEC5 RR has its owner
name equal to the NSEC5 hash of c.example.org. This proves the existence of
c.example.org. for a type other than MX and CNAME. 
NSEC5 RR are precomputed.</t>

<figure><artwork><![CDATA[
o4k89v.example.org. 86400 IN NSEC5   48566 0 0O49PI A TXT RRSIG

o4k89v.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
            20170412024301 20170313024301 5137 example.org. zDNTSMQNlz/J)
]]></artwork></figure>

</section>
<section anchor="delegation-to-an-unsigned-zone-in-an-opt-out-span-example" title="Delegation to an Unsigned Zone in an Opt-Out span Example">

<t>Consider a query for a type A record for foo.d.example.org.</t>

<t>Here, d.example.org is a delegation to an unsigned zone, which sits within an Opt-Out span.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Non-existence of signature on next closer name d.example.org.</t>
  <t>Opt-out bit is set in NSEC5 record covering next closer name
 d.example.org.</t>
  <t>Existence of closest provable encloser example.org</t>
</list></t>

<t>To do this, the server returns:</t>

<figure><artwork><![CDATA[
;; ->>HEADER<<- opcode: QUERY; status: NOERROR; id: 45866

;; QUESTION SECTION:
;; foo.d.example.org.         IN A

;; AUTHORITY SECTION:
d.example.org.       3600  IN NS      ns1.d.example.org.
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for d.example.org.  It's RDATA is the NSEC5 proof 
corresponding to d.example.org. This NSEC5PROOF RR is computed on the fly.</t>

<figure><artwork><![CDATA[
d.example.org.      86400   IN      NSEC5PROOF      48566 A9FpmeH79q7g6VNW
]]></artwork></figure>

<t>This is a signed NSEC5 RR "covering" d.example.org with its Opt-out bit set 
(see the "1" after the key ID 48566). The NSEC5 hash of d.example.org 
(which is BLE8LR) sorts in canonical order between the
"covering" NSEC5 RR's Owner Name (BAPROH) and Next Hashed Owner Name (JQBMG4).
This proves that no signed RR exists for d.example.org, but that the zone
might contain a unsigned RR for a name whose NSEC5 hash sorts in canonical
order between BAPROH and JQBMG4.</t>

<figure><artwork><![CDATA[
baproh.example.org. 86400 IN NSEC5   48566 1 JQBMG4 A TXT RRSIG

baproh.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
            20170412024301 20170313024301 5137 example.org. fjTcoRKgdML1)
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for example.com. It's RDATA is the NSEC5 proof 
corresponding to example.com.  Per <xref target="precompute"/>, this NSEC5PROOF RR may be precomputed.</t>

<figure><artwork><![CDATA[
example.org.        86400 IN NSEC5PROOF      48566 AjwsPCJZ8zH/D0Tr
]]></artwork></figure>

<t>This is a signed NSEC5 RR "matching" example.org which proves the existence
of a signed RRs for example.org. This NSEC5 RR has its owner
name equal to the NSEC5 hash of example.org which is 0O49PI.<vspace />
NSEC5 RR are   precomputed.</t>

<figure><artwork><![CDATA[
0o49pi.example.org. 86400 IN NSEC5   48566 0 BAPROH (
            NS SOA RRSIG DNSKEY NSEC5KEY)

0o49pi.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
            20170412034216 20170313034216 5137 example.org. 4HT1uj1YlMzO)
]]></artwork></figure>

</section>
<section anchor="wildcard-example" title="Wildcard Example">

<t>Consider a query for a type TXT record for foo.a.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of the TXT record for the wildcard *.a.example.org</t>
  <t>Non-existence of the next closer name foo.a.example.org.</t>
</list></t>

<t>To do this, the server returns:</t>

<figure><artwork><![CDATA[
;; ->>HEADER<<- opcode: QUERY; status: NOERROR; id: 53731

;; QUESTION SECTION:
;; foo.a.example.org.        IN TXT
]]></artwork></figure>

<t>This is a signed TXT record for the wildcard at a.example.org 
(number of labels is set to 3 in the RRSIG record).</t>

<figure><artwork><![CDATA[
;; ANSWER SECTION:
foo.a.example.org.      3600 IN TXT     "wildcard record"

foo.a.example.org.      3600 IN RRSIG   TXT 16 3 3600 (
            20170412024301 20170313024301 5137 example.org. aeaLgZ8sk+98)

;; AUTHORITY SECTION:
example.org.            3600 IN NS      a.example.org.

example.org.            3600 IN RRSIG   NS 16 2 3600 (
            20170412024301 20170313024301 5137 example.org. 8zuN0h2x5WyF)
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for foo.a.example.org.  This
 NSEC5PROOF RR must be computed on-the-fly.</t>

<figure><artwork><![CDATA[
foo.a.example.org.     86400 IN NSEC5PROOF      48566 AjqF5FGGVso40Lda
]]></artwork></figure>

<t>This is a signed NSEC5 RR "covering" foo.a.example.org.  The NSEC5 hash of
foo.a.example.org is FORDMO and sorts in canonical order between the 
NSEC5 RR's Owner Name (which is BAPROH) and Next Hashed Owner Name 
(which is JQBMG4). This proves the non-existence of the next closer
name foo.a.example.com. NSEC5 RRs are precomputed.</t>

<figure><artwork><![CDATA[
    baproh.example.org. 86400 IN NSEC5   48566 1 JQBMG4 A TXT RRSIG
    baproh.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
        20170412024301 20170313024301 5137 example.org. fjTcoRKgdML1
]]></artwork></figure>

</section>
<section anchor="wildcard-no-data-example" title="Wildcard No Data Example">

<t>Consider a query for a type MX record for foo.a.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of wildcard at closest encloser
*.a.example.org. for any type other than MX or CNAME.</t>
  <t>Non-existence of the next closer name foo.a.example.org.</t>
</list></t>

<t>To do this, the server returns:</t>

<figure><artwork><![CDATA[
;; ->>HEADER<<- opcode: QUERY; status: NOERROR; id: 17332

;; QUESTION SECTION:
;; foo.a.example.org.           IN      MX

;; AUTHORITY SECTION:
example.org.       3600 IN SOA     a.example.org. hostmaster.example.org. (
            2010111214 21600 3600 604800 86400 )

example.org.       3600 IN RRSIG   SOA 16 2 3600 (
            20170412024301 20170313024301 5137 example.org. /rT231b1rH/p )
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for *.a.example.com, with RDATA equal to the NSEC5 
proof for *.a.example.com. Per <xref target="precompute"/>, this NSEC5PROOF RR may be precomputed.</t>

<figure><artwork><![CDATA[
*.a.example.org.  86400 IN NSEC5PROOF      48566 Aq38RWWPhbs/vtih
]]></artwork></figure>

<t>This is a signed NSEC5 RR "matching" *.a.example.org with 
its CNAME and MX Type Bits cleared and its TXT Type Bit set.
This NSEC5 RR has its owner name equal to the NSEC5 hash of *.a.example.org. 
NSEC5 RRs are   precomputed.</t>

<figure><artwork><![CDATA[
mpu6c4.example.org. 86400 IN NSEC5   48566 0 O4K89V TXT RRSIG

mpu6c4.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
            20170412024301 20170313024301 5137 example.org. m3I75ttcWwVC )
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for foo.a.example.com. This NSEC5PROOF RR must be 
computed on-the-fly.</t>

<figure><artwork><![CDATA[
foo.a.example.org.  86400 IN NSEC5PROOF      48566 AjqF5FGGVso40Lda
]]></artwork></figure>

<t>This is a signed NSEC5 RR "covering" foo.a.example.org. The NSEC5 hash of
foo.a.example.org is FORDMO, and sorts in canonical order between this
covering NSEC5 RR's Owner Name (which is BAPROH) and Next Hashed Owner Name
(which is JQBMG4).   This proves the existence of the wildcard at closest encloser
*.a.example.org. for any type other than MX or CNAME. 
NSEC5 RRs are   precomputed.</t>

<figure><artwork><![CDATA[
baproh.example.org. 86400 IN NSEC5   48566 1 JQBMG4 A TXT RRSIG

baproh.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
            20170412024301 20170313024301 5137 example.org. fjTcoRKgdML1 )
]]></artwork></figure>

</section>
</section>
<section anchor="change-log" title="Change Log">

<t>Note to RFC Editor: if this document does not obsolete an existing
RFC, please remove this appendix before publication as an RFC.</t>

<t><list style='empty'>
  <t>pre 00 - initial version of the document submitted to mailing list only</t>
</list></t>

<t><list style='empty'>
  <t>00 - fix NSEC5KEY rollover mechanism, clarify NSEC5PROOF RDATA,
clarify inputs and outputs for NSEC5 proof and NSEC5 hash
computation.</t>
</list></t>

<t><list style='empty'>
  <t>01 - Add Performance Considerations section.</t>
</list></t>

<t><list style='empty'>
  <t>02 - Add elliptic curve based VRF. Add measurement of response sizes
based on empirical data.</t>
</list></t>

<t><list style='empty'>
  <t>03 - Mention precomputed NSEC5PROOF Values in Performance
Considerations section.</t>
</list></t>

<t><list style='empty'>
  <t>04 - Edit Rationale, How NSEC5 Works, and Security Consideration
sections for clarity.  Edit Zone Signing section, adding
precomputation of NSEC5PROOFs.  Remove RSA-based NSEC5
specification.  Rewrite Performance Considerations and
Implementation Status sections.</t>
</list></t>

<t><list style='empty'>
  <t>05 - Remove appendix specifying VRFs and add reference to 
<xref target="I-D.goldbe-vrf"/>.  Add <xref target="examples"/>.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAOFSWlkAA+V9a1cbR7bo9/oVdciHwBxJRhJgTGZyBgOOydjgAWwmmZmb
1ZIa0XGrW+lugbHj+9vvftWruyWwHd9z1z3MmlhSV9dj137vXbu63a6qkiqN
9/TJ+dHBdkcfnpzDB72/qK7jrErGURVP9GGcJVGq8yt99C4pqzgbxyoajYr4
Rt5Tk3ycRTPoZlJEV1X3Zhyn0dtuVsbj7e4mPIZu9vRgs/9YqWRe7OmqWJTV
YHPzyeZARUUc7enjrIqLLK7U7RQ6javbvHirL+E/STbVPxT5Yq7e3rpm3UMc
SMH89nRZTZQa5xNouacXZTcqx0mi5sme0rqrq3xM/5Z3syK+KvlzXlT2yzif
zaNxRZ+Lq3E8Kau7NDaPZgAGbpdkaZLFSkUAm7ygzuH/Gn4v9/SPPf2GFk0/
MSx+jDL/x7yA6R383Ds5PqDvJUwhhum/TNK4zG/Kt5Hu94c7j7bp6Tip7vb0
qyK6jvh7PoEu+8NNvbkpPyyyqrjDLul7PIuSdE//GmU9Bv9fs2TcG78P53ne
0z/k6WQUF1NvpufXUZFn4ROa7tO8rODB6yy5iYsSphTMvN/v64PFbAaAx1bn
VUe/PDjvD/0VcA/0QxFPkzyDBe97K/p2czDob38bLun1+b6/pinN66/jsjda
9OLJIlzSYU+/iubRJJ/nizQvvWUdJrOkKpK8bDag1bllIW6/jIq7NMomwRJ3
B4MhvJ1klX5aRNn4Wh8W3uoO8jSNpzG0KN6Gazz01zjYfLy1uXqNk2ROc/zr
YjZprhG27fnit0Uc7NliBkB3P9OSziNApqu8GMfBMgbb25v6MirLuNAXceEv
4TnQ06S2Q2/2w9n3H/dXz768xmn8dYrfekA1jR066OkX0W1BrMPboOgmmeiD
8BGtY/9tBH3BXMfXWZ7m0yQuQ9SD9Twt8mhyG919ArZtDvpbg25/c3tr5XIq
gOJfI5oCrUZleTGLKsAWJHtgEv3N4daetp+3zedBv//EfR7uuM+7fft5uLlr
Pm9tDofe5y3vs+1za2fLtt/u97fc523bZmfg3t3Z2bS/P37s3t3d3N2kz8fd
wx6TVPemuMIVPTt+dd7t7+50h3sEBpEJh8k0AVDo82SaRdWiiIHEgUCiYqLX
D8/PN6itY4d2804AVHkGLx5nJXS1qGINKGlfLjX867aW98+IiM0n3c0d3uq4
gF1PsqvcdI7TBJ74+qmmuYIsgYfhxuw8doB+3B88cYCQjaHFJ/Eozkg8MdRI
UMnSo2KKCHZdVfNy79GjeF4A8feSaFz0YHGPgBi2Hm3vDnrzyZUPq29JECLH
zm+iUXoHH+IbFKEgvkSo/pxnsT7KFrO4IAB924Bft51Jy88vewDZvPB/auN9
8uhFT5/Fd++TrNbzm6iMssr/cb+nf05ugl3ob3U3Hy/ZhQSI6gS2/9v+tgFd
PB4/GHqPH20+eVKH3gGISgKgHsUo9MaoeqSENQK8w3ie5nckjf9rGdxWQAMe
XcbA/tKyBg7HP7ttknw56JfBN9g5p/h0QdNZDs/4FcJJHxR384poQu8X42tA
a20gJqAeTueLgEZ/ePW6+zQqQUtD+A3186i8Bs4YR6g4LQMULOcSaDCuL+h8
fH2bVNUsyoJVAfN+msdp/ecLhGlS1hBnxSqPj46O9PndbN6zGt4BKF8LIhLk
CfvzeYo6JxBHqddPDvY3zLJvo/RtXDSRDHBskpXjRXETE4J5jXvX1Sz1QXWC
zzQ/XIFCiAFPQSiCoiubaxfXx+nMojmxjm4MpNyO9tjGTAdU40fluEjmVYlT
da825vctvgaagN9oKY+ASeoz3BdRWNrnOPyCSQ4fNMvh6mkCbzlJ3uawqw+f
PPaKY7TOGiTS9WKEUvlRlOUZYMrmI/NGz5+n+VEDRl/rH/PrTINNo8+S+RyU
oHm6mMruhrMmAWZ6DieH7C7FdSMKtaIiTK6XpWCepNGohE+PsPkjVFkexe+i
2Rx0s0e2h97Yny7+vGw6Jy+AXF5Al835vDx78+RJwBDeAOldJSCCYK1AU/lM
P1tkYyKpFfLmZTK+jtKkxiTOolGL/JhcRz5d9J8Qd1pG9M9OD86V6na7GhZQ
IWtX6gI24jAH7Qq4PiiCwBOA2Gb6PAZCRm386B0YmSVzAeb/G9BXVeSTBdhn
GliHVgUYTQvQc0HRG+eoVKyfnW2QxIgC43VijdfYGK97iAkK+aU+OyPGg5jB
/PMM8PLiGrgakMQCxY0buBQRFaECo6MULVHSPfQMdJkoS8qZJ7HUvdMAIuAO
FyX0feP2raB9U1dm3/T6m7Nn5QaYsnrOWgX0c4XWqI6dOoF9vwcVA0xhMJJB
TvbMfNMSX8yreFyVtFRYUjwtxO7BH/A9bd7TOIRKrmiVE7SQwDIiM7nIZwnO
FVvLm4xOoCYSIAAFsD2BAWGM/cIyj+14SYlLoGYTkPXjCNYu05zk0HOWV7Ch
vy0SUDZBd7gB2FEn3RJ0UBQTb+O7EgExirkjhAVuRvqAmXRg4bTKIior7ER0
i5wse22GKMfX8QzmkiZvDVZcXicwkReA3j3GZZhn/MvR5Bf8F/A5fod4UiYT
6OW3RQSTHwGmv40BmOv/+ue/N3Dd0WSSiF48gmfTAoyPiVNh86wDAC9vcdIw
tSuEAqwONMmofAvAgm8lYUNHT+MM9jzVswVQ27TsqLgaA5SBqu6A2wEoRkgV
s5xhDP0DrBYjI1mpJczHIXgJrVBbGIM1G43yghAWoArQ+iGpni9GOqrUv/7c
woKvQFOaRI/Y0UO+n399zzPRMzDFkDZxBLKyCUMV4owZuaPzeQzDlCWsraNh
FWBIguo2of2ERUQ3YI4RSVzHRcwdi/+l1FOc59UiRQiNx/G8gkXCawS3sjIb
NUsmkxS26BtEQqJjhAF8/wa4G28HPGUMBPwGezS+h7yX0LWydG1wDtFrJU8z
BHoNHAV5GuC2Kk17mAwIqgpRDiyfpCgBXHaa95CyCkhZfw4pqxoBaSFlWA9I
bTcVYkel5Uc0useUOvoWty4cfxa9RSDrcob7DI1BX8ZJCB0CdBTsIQoTw5wz
XPQYFXha9cyOBygKzB9eB5JJ46hgVsALUuhkKLFJJLMnC8xnmWOYF+DZAvVn
6AE2Hzb26k4DbcL2A2UZKAAQcuiy0GvVNdLcGgwQVehASGWC0A1rA9AVDDlD
qkNAp/E7FVUVUDxs5H5mh4dmzHUJ2UriaAASlmmwAFjwiFCffBIKuEfB68cN
KefRrIOTQlmk1wBx6OfZIq0SGFFfPj89PtcGiLAy3KcoVegUQSEMNAnCO+JF
gF5/p+UJNp9Fd4CSgPdpPEXUBs4xFZ28ypVg35r+8OHs2QE6IT5+BFrbR7AT
hISpWqIpHyaUVZzQ61ewWpF0BHwPw6MpaAzAVSIPgyfC6REayns3kJLva/sO
873EPTPPDecnVZH0AuCJhBS0SPTMfPyI7JkfwsISYmaIa7QAfHnCCo1FOitX
oS+gGQAu8B7oElEaB4wnSsbvEcPkXhOE/4QwoE3DKTcMRcXR+Bq0FdhSkYPM
Q3AkYCHEt+ozGpNei4Y104wRoKDjeRR+sUSqE3tk+gPxl3Udv4O5RjSKGt2Z
Tsmkk3Vqo2rdXoOaCVMkkqJ+4CUY8qkoApVl77WhrW6QxdAdfoBdfpvlt9TL
MkWhs0LZIUWEMBk6NFwSx5cRadMsksEcn+e3MeGZ0RVlwwAH8lvG8Tgq7xoc
ENR3nxDxbRmiXFxdJQC+gHWd2O2ye6LXyxj2uzftdQAfQ/sT0RJ+E1uHkXSi
PnywVsbHjxv3YvswRHemaV4o7ATYScA5ArT2l18gfs7TCBVz2H54nBR6TI4M
kNBz2HEF8u0axdhpbQIgDxcFYRRwIZ6IofrS2zbZHYWMsg056ltld2qZUMI3
gGYB2vO8LBNksh4sQmg7fwKARMkP0/kC4EqwJkSKCuQ10Kd4RzPxbiDhZlkE
Ck6U0UbnaanWGzs5bN1Kt2+heip71VmqfuvrPJ0QfSmhDF2nDJr5gqUp9Ie/
ABaWdxm8VCbvZYcBpQkkaGvNka+gukDDXoHSRevQvoKsUUHW6/RL9/LFBrLk
l0mWoJi/6x4g2eP4+LyjRyAtQA6g12HEIpOQD522uPaQKbiZTbSZDMLljtR5
lAraU6TB0gT5TRNlypswd1ofwa/IPPg5ij0WWfjUZ9kbnaWiQyXMiAzm+Jxh
5Gb8uRvT8fAeRkpRiU6Wq2d13Ffqd3TigfkC1vfvnt11U1qkFGXkv+rPfZmK
Y/Vk1tjwVZue54MFG50ynjLtww8wl9eZSIDf9cmptv/96ejcfIZGhGtauwfe
46DR8EGNAPNqj70XpNF2sye/0Yc9gEZa/uVbMCf4f99+dEbCPaAg2gptbrun
yurj9Nq35cM4mr7IQQQSrXZkGsJzWYwuMkAdgHLAdtGsuNbGicD8PcmEoonf
RU2ng2uPPocNoEnyMIGKp/W+hp9wboTAZFB2kXM46w56XDYReP8U6RWni2RA
Gr/ypDd1jt2hQjwmtzBTEr4NtMUEi7CmufP4+JIyL9FieATQl4D3VhlozEbq
0yTY9eTepQHRFibdF8ZgGJloxN+OfgK1pQOsdwZ2KBkZkQL91vwu/N+YDzIB
a9Rd65soXZABdxEuVMm4n+LC0OzC8MZUVW4hFQz3DJURePeO+N8dC9gY1pxU
aC9k8ZSZiGGlq2QJyW7LS+98CUDuh7Y97DgaKOJqUWSl2xUcEVM1cO0y+YnF
adRz10vg/seho4ZUkVAMRnOgD9CBlSc2Or46yFINV34PoANTl2cC6IRM3jMN
Z/nEIFfgLAOUeoF+oiWzQ7+GWRx5tcrlvBwNl7hAKWZ6E0QlBA8oCl0DYpJd
mb1WvD+8zax+g5l1h5/MPhvXD8qwGM1psMa/E6UDVD5FGv6EgZb73JzGJYyV
ZUyWmVmBngX6PnAWUbWYGeJ0Glp5AFFlzLyawOoZDiwSGHvIJjwT4Yah2gJY
RHsfenPUg7w5gZc2cJepch6PgWlad/CIom9CFhii5ui0ftUdbO/AdqTJHLrX
FKMiushZtT+aDLa3+09qLXrAZkmRSWtbDvBDFwlomeIhUrTzYffr6Cm3UCKd
ygRoyUpHrxdvIOc1ETtE9LolA3Pt5evzi7UO/wvCkz6fHf399fHZ0SF+Pn++
/+KF/cAtFHw5ff1CnuMn9+bB6cuXRyeH/PLL/Z/WmDOsnb66OD492X+xxlqX
725Hg4L9u7jBBeAYGc1li66I2RZmWRdxMUskn4BWVcTRhEVpVJbQ9UR6vYqA
lyfAzEmM4EbABgIA0VmHcxPvPWAj+hTbhu2LO8B82bZfMJ2DzYTAa+DcCND0
O7D7RiU7dzX8KubPYo7RFHZuge0n6xvu2L4xhcR9GW7u2i/GXrMDMTP8Tsly
NIBxVjoN+7FAzYOSdbuWLTBariSYyISi7blKMgOlMMXEjnaVo7FMLMBtl5Og
10W+mF6zSWLwYU8pDG8PB9fxuz21R4J0DX/Rw4E+yjjtj+dJHlZkCM/jd3o/
nV9Ho7haQ9QxJIvRRgMGTKtBtYYkM/rmoRtgDBigQlmwvvaXtQ1CRuA18JpR
n4z5u206HRuPEk5qZyuc486WnWM4kfo0lPr7yf7LI/O257lh37w1ZNaZy+MT
NBBfiazjKQElmx58IWgUiPu0PeyPJU6zOyeJTG/wRs/znOdX2JZ1RPrKoHW6
ng6Esx1Biz3cpn1soCBWOlAHvQGZgWOcAp76MMNA8L4oi9fsKGK5W9P8nNZI
s4uqxghOZbHem5bRlFP5GAgh654k07gkD4FNcxEIHV+5EWEKPCYa5DBjigfd
GRexAQFqcKEe5ca2E4nSKYLyesazAdUWncLQNS7cPhTOI5lw3H04QUKLX0gr
2OhQO1Fx25rxIzCdOcwMvEd89vXWAMd8VJGzsyp9bdmMll8N8Dvi4zf6Kcj+
W3SqYKoIIMcIOFMlPD4gQcupUcVFbSMHGw5JOpvGVg8krU56VGPp0fh/PC7t
mKl4uNF1T1PtLrLolr1eZZ7CohWF3IzrGVTwhDi585l4kWtykHncDfmi06Pa
+wcVDwxB1ILi2Zz1J28YtMXsUB3QmW6NA97bZ4lrJNgZdu3NiGRNEmXRL+g5
hoaiVwII2FsLAwHjsl5u26vEbUoic3K9lsbdG41Rj5eZ0nrDjSLtYmE8OOjY
iZXr15ss6vOLcilcCPAViLDKhniRySbkAS9iQp/n+a2gGCaTg8ZzaTx926GH
M+C5MGUyfCZs4wBCIeU05Zrix1Ug20BvnJcgt/q9Bi9nrzMFssKu2Wy2Konx
aGuPTzqyqTGp3kpm5/cB+EGqJYVMRY+/SaKGvRtY0wBdTEGfJui6WMEbI2kS
csYBA8F/jz0IWQskeMbpXZfZEUkqtJaFMw5Cj0YbQMTVcBH8IFJkFBs2R4QY
tcGMmbsPXOY0XmeTmJUXMeXmeZlU1v0RbLZzJChyljO1I5GI/6ezRCR6PoWG
6BNvugQcgEDrzksCeOlPOWaqx1MPTPH1QFBDX6WO/VDSPEoKskscN1eYKqOP
sCUPdXZGjnXmAcYmdATS5vJEP4hsF6ASRi+RfrgHE2WzvZdCPhijJ9gAIreG
ixoukzQ3OmIrvA0XBjHXFtlC934yXqADqLa91hVNjiHSzDp+hEc87G1b3Lq1
TB+4AT7yBtJelBDfry0A5DEVkZbloaVHG7A/ErS28Tc3DO+7oWclwEpK9y45
nhrax9nZ+fEPtGWcIQ7bFFfQGXQRo6OF4vye9566e3V2evrMm4+48Gt8Td2/
cto4Xxbq0KU1ThPJP3HAcIw6AYmKjPpPHH/ltm7PaqpwG/MkyYyyR4cM1DkD
W7VKn2UZWJCa21A2a6ttn6lVuZsMsoljWvzCMvN75yXYVYNkU1+mXslxDW1s
LNCiT33y3pYE3TAToS0FQAsrkL4I12BkwjGS7vzOvtV0mFl7mg+xUefXa/X2
sEY0iedoPZI7i/wzbb2IaiXcyymFnlrEdjDoD/mtqsPXTzUUiEWFJ5XwucHm
SSB56hJXCCKyaoXtgxnu0YHV3NdRJW/ank0T/cLKP+g56AAHUFGDIoSUaIPw
cYPJBc8z3Fswa7x4myd3vOSEW0z+42AeTypfVDWpLG69HGz1Cs8E4WYoZXej
nW+2AIuoQDkzhDuvgVDoCuH4yWCsd8GQDPWoqLkW3Vy3oS9Jk6m9QclAxydv
9l8cH/qQ8Oxku3ohvRBVmF3hGuuLVKsXmQR827oJAOe83a+bgM0ld+rNvxBZ
HKQIJiF4wvxHQ7HklD3ovhps73TPn++j97ZO3FEpOO3EhouJ4cuBge0pP/wo
6FuNkznMr1xg5PxerJLRQj/MLKrEq9lwT7EkotiWdcwpSt8j0bCFqg1BFI+L
ib1LxpaspUSoR0Zi0kiikio8hYfZbUcHh+f73ozIxWijYxj1QlfAv/55cnpx
tMdO9JrBjlk9mPGfVxzvRGcBDljzas/zJKscE64COPwH9vAUdvwWTS3Xj/cq
TYzjYRzv52DBLYGNXa5WOYTOcJOYKmAJl7Ek+ZWYETfsM9KWDVhz7ApxNzZO
SenO2zKOXNJqzDwBDv/xr3/fg5JHhxQq+FpYGXb/34qXQ4uXeFzxM/FSAivL
MRNVh4tgRibV7oy20ZO8Ml/qudRNGcjmLaXUcCIY6zeUKmkV0xr3o0gkcjnR
2TmC4YY73L/Y15fI2J7RCnk6/LMhgBowkWeDxoFpqDALQIP/DX9yCqP212/5
36Dlf0M9VHqTHg6BX2zrHf1Y7+onn/Kb+s/uF/5P/Q5TtgoeZW00/sRp/TfY
hObfoz9gDgRM5WaRkFUDVIReVRJiJnPYUFaNRJ1n/W9s3keg5xXkiu+yXQQ0
BkwGveUUG3fkBPsPopkPQ/redhHjNvzQxKBXHPNmXutj0tx/IESUX9XQirpg
zHLMBd92YOA5U1BYuuRIHaD7wiT+TIB/YDCT4r2E6tiHB4zWToBcOZxiuWmP
U8zKOXLupFSRKAvIUoW/yBtV/K4KKXwFeSP5uLT/+2LBJuBABojKA39AT59m
XqdeWi56meZJLO4EwwrIvdGhkDvlQvo+B/JLOuUHeWDDL8GSjCcQZmeadET8
LF5MmSdDz/jCjaW2gCWn1DoD0ClvYHlb+iWU8DDtExjV/wguZf8QrS+iqf8T
P3+WRtPSfD/BQ0Mv4mwKOoH+/Y+eg/2jYZ7zRp7S1tKRu6/EKR+1zgH/Lu7m
QKJJpV9G83Jpqz+OWyMmmo1gHhP4mcgHB48oZarJ/dg1ZSV46Eajc2QmO2V0
V8XsRmVVgDv0jEwVulocc3V6GCs1noLGCo1x3gRzLY0jwqrZpDpGvnDyVCvP
ahLey0ho2W4oyHgNsziiLCZyCU0S4I4LPLWWUNYjeTXs60HYn3JNfrnCAexw
Ppq7QT0JEchR1jeNGFUpv2e2px2VpVexJ0t/3KWNad2UhMHcdJRkeDJJetDH
lbLYEgVeBZkKcsq6N9ihiPX2Bzi/XOxbkwHxDt5x+WqAg0GQymPOwG/H16G+
wYdX45pMpzEwbxkzfwCHsF9xL/oatLeCISG5n/miwtM+VgQwMj2jVXz4xt//
esYHev0Bg+Q9akPOL0EgKwxqPLrJDwI+9/vl76ctvFN4wPf6VHf16bzqnoKB
iGPib5fw22WSTsYYVeYf8fQSwZmEqpucPaqKNHe1IA832owokSmKCSbO+7jI
Bef8kfhUnyHuMp5FqFmUHKA0CWr4EgGAQkiUsBOGYa3jg0FPkyKm1AGNgQ49
eocnQC3yj2IQpGVmwXqJqMfC1jC8h5FUfmxc9RxrMacj6ljoI34KhnWq15Ne
3COfexEzotsus3wSq2Q2iycJDJneEV7F7JWzrNE+13hSAq0tqweZEyjeoBsm
o3ZRwBwt+64tUg6+YZybmMksepfMFjPvwCHGlGxCo+h29x/vFJ8aTn0dj8/l
ZbWByUsxxYG8n25z9ryaJcjavWyyejWajx+VsYQf9wa9flPb+mylfoVGH4rJ
z9HnazLlk99vFRJ8Ftz29EC+Xh/bZ/NqDCZCF/MDMgza3rDNQLllmKSD8g3t
CXM45NZZHEiZ8khJtpjMJ+TxdnR70KjJdMM2KkjMbzDe2jFLz6qRAM1S04af
i19KwGkSK8fpYuJYPiVOXCWpOWHdfH1ZiK6jjf1ChocLhauaCePFwq10NJgt
C6kbE0ae0EC/FHhe9eNSA8NGFJP/4SYG/HlUQdWA/nDV+muo1WYDl+nWStWX
1aZOLVXprIrViMk1zW35hWKWbTj62SzY7+Tr8OEWGP3xbhVSUGFd9xYJdacq
t61ySEBn7RBJVYRduZjNYCffoxPGP5ZZmbHulcpYJMFkxOBbtVB/Cs1M7hsz
P07QehZRIQXJ/qDCMHqGRxZBT4hmWB6QjSB3tpA1JvRZt56XmS3KyniUOOgo
AW/8XOJ5Vy8xwY+i21wSOQdhw+CcRLW/5EQ2AJNnzS4gZIqct9egLIzZUxqQ
l41Bx3QmLAqsdJJ5cNaMb1xgD9bqgIHG5kQnQb1cSDKSSUAyx9arfBpz2AVh
LHnAuCGodCH8YYVDLCxETAH7vY7Hb2VZnv3JPxuVVXgIJQyZU3NY688/n2JP
00B7dwbmoh3alIDBuncsYXhOUMTjeraohJnFHDYT5n1s0pMQmaOEjwohiMJc
sM4SHmMSqdhYIOEc6gstxmcUJh9jDjGgY5CCJROh/WmbSNOe9fyIjMKYLNZW
M2AErDmOM2d24KDflh7nISumXUsThoqDHBUF7PSZyVxVqkaJaKid1H2ebqYM
RT7X9g6LxmGhHAK8CBVKp+8t7cVaJ1IBo/niKoKjbh1tIdGNUzBEAG4wCH4q
iLQssXhZMI03yZUgL1l379g/LG3fvDDzcwURrhA1iXjxuFcaT0084N7Wh/QI
cD0pmAvDSw0axH4O6ktLgvoWdiyLgoFnogEYRHXUtENrbYwlEEjJ/6TO7Mqo
YMnJudXfz0/3zSR9Df3L+meQUcCypeM//0e3+z1jvr+d5CQrEvQiyLHU9K4H
LQkVWhrz2TYfvEgzuT7Egi0ewbDGQSm04quLbDPL3shXeK7/fvHTK0CD5OoK
M/+k0oXxVvB2xvBsXPHZUfuGFK5grnFjkUMKFikrpwlbKHAVVdfmvKusln4z
lXbKZDYnM3hMSZyjOwWa41zOBSaBuXpmoGAX00amJ3kVOyHqLclj4FctSyKw
NuHasV1Ax3gK9YjA0sqejoI0UYkKCTtKLD8yqLWCIfHE+PWHvnNAqLjinU/k
X/bVpYyrlTfwKy0MoZ2+auyIiIpXD+836PThfRwIYdb7WL3Fq7eXfXOGoxrK
bE1vNBbtZ8qMOdcMju8XHiv5c7Mb3he7J8sbSkrwOq5QqGyjjoErGWazS+QR
gT9Ucja/cYx/tfTfN9mf7Fa4iYN0aw8T4hlVV4rs2eLl0n49jUZxynW/ETSc
vYyFNjj1iA6Tcb8b3iF21ufphGBdQEhi7gOUlc+i0hVAMFRrFwecJ8pMJYaW
zfsMlaMF376mlLOY0SLullDo8r0WkdDYMR952neOStNQG2JNdGabO2c+I/al
pzgyJuJRmuZu9PQnMwZXBc7548XD7i9PlqbM0ja+gtL5MI0wIEiCZbmCadg1
MDXOC069nphu6lvGlMhmbcj3sfWoeSjBTMdun9s39DkA5jFu0EbC+zMWFjUj
+5y36SAIyBCeUh3Bcyn18OEbROBfJCf8o1I/01k4ju4yAChUVEIHpZSQoJiQ
q/BYP97uBQH6NiHOHPP2SlU1oz0o00yh0Y4KfSBYuDHhqJKJXfGcEnYv4YEN
SiA8DiMvOswI8WM7vIFecAc047bwTktXckCj5SgrnYWgGdo9Dm0F2kGpt+AC
Dz19il6G20QOf0An1Nqs1VkYnLLIxwXn8TtuIX6h2lk4HEocnHxEzRyi8DK0
IgNgPyPLugsWsEBzttMFhq8bBwYtAnC+kNGsZzGgpFTbQHTB0yeTibJuDu63
iFNyjBmXi5h45jiYlPzIGetJJ0ZvjbKnOnmUHrnEzkHnGVdcNcNmepkTFKDa
/0DVZ+VMiYCBT/vW0v9L8VxNJjWgOmeT2wMPyF6/Ls2SXETWw7fIkt8Wy85u
ekENe5YNj87eUapx1uXje1HaQUg6DwsGzwHzPROCy6w5lC35GLvngzXaIVDU
/k/kvXnH3kWYL/rc99nbtMTxI+6aVo+MhCzaaJB8t86by+ErY/dKcKoj7zve
GnmpHky2/h6IGoOvPEUUYEwJHdLsn/K9/AH1yojSa8sG4tODHgiPOCqaxBuC
nose8AaUcWDcyThI2+YAfSPmzAtkz0Z7xLkO38BHZkYM2E5PB7amdGCHFAMX
/ku4FmCaFx5vCbVLT1ayVdHbWMxxc2Ko4CrOxM8ltu3CeTDbDQHvodu7ZkiV
WAIHZuwZVmvIUD0pnkg9dxV6MXx4ZfB1lEbZW5nIkZtIGCCVpn7NHOKyfsrL
avyHEbagd/RPkiiNq9ohUWQuNbclvLPtsQ+XyFX60Fq6MFPqSi9x45I2VXdb
1KcguIoMhGq9GN4tHCDFUleNPihJtH1UlG9YFrr9JXuGGEspxVFwmgy5sDtk
ijALpS1pJ2OYUGky7YlHnJ/u85nffbSJgsCAlsI/YRcXFy8E36Qb7MFEV/Ah
kz45cRKTmBpxZYCAG7CxMJHoT+2sM52bAAuBCjsy1eDjiAtFsF/Mq7BFp3xN
iQCfhXMhAzOq8HM/lzao1Yi1PFFoXSXTReFysL/B6ODYXmpiFOVXxjw+Mhrz
K1L+QXl0ZdBAdXxFh7GDSJkUNbvNYau7mL+gkZdFRZJjIeBMasazcmIKu2mp
BebF32z5sdaoFSXKECOXkzB4w0IYPaLCsvi73XTOeKaT4YYAubXFLYXvtZxq
Xeo16NgjknJQBzpXLR3UzRf/yD/PoW4QqLbXnG5oDgR61e2EMbaWaiPIt59N
vus1SwXznNrPMy/3oBgUdHXyaA/oKArJc4OcRJ3mTCrWBPIwsLaJKKWuo1So
tF56XYV1a6QKAys4VuNsWbtXUlBAUBu2bSnt88eT4yYq3saw64VqbOJH64a3
qU81DUyKb0sYUFirP9FmNozBGsvoIuNTNy1uYRVtOEWwQxwyeq7U3G6MUdrS
U3UORBQi7BaFP2NDGUM7Tq+zRpdL6/GMVh7bhN+D43hU4hCtUT7l3AUuA/jI
JcRcNZupqP98qLet+gIZoa5oQgetbVuuVJg7LtjVF2axzRFkN5LHvYT/oMJe
1nALnWhhvRmx64nxu3IAy6pH42YqY/z5WkQQe+joeomzkEmTcqHisBhGo4vW
2glsZNLqMp/nGizj+LzY571G/teZDag5HFek1uQNF6Sl4agOMTY+5+zpzrRq
rg+Fo+gEeHsfSO+W1JazVtpgNievKqcVGBO51QfAK+VkmXl0l+aR8cL5QErY
n3PPesxy/FSyjzW9o7YUj2EYzd5zI3PJMnbTqcBNZwsp3NZ9mRaxN3hp7HYD
VUpF6W10VwbhrdZds4dfaQwurmmnrcjLdmeqYiNqO3c+O/N981gKd/FC6o5E
bS5m4ii9N/Mw44Hts8hXQjyqIlqP30VkguVZECyh4pWG7ccT4wP23GUnpxf+
AVJkb2kap44rcGHVIV+DYUp533/rknebC+ubtn6/arlMyVYl7TAiw6Jv6Tgw
8IKYtFW84XCczKPUXd0yzXlMk4B9zuWDU6r6IpMOVfoyNGGE9/u5W6p5wKBm
HBo9j8UHln7Fh6ic3WZ+ntQFkwdh1CgGjT1B525EgDb1yRDak/xd7dCtChJT
/UTl3ZqXsn4eEQU6oYWBvVJnLBFmTuo6Z4HGKHHihI3Rbm/95fdcriodwDZj
uP2lakS2cvMa6EVdOnhYXgceXMpnNFNcUqYR7xU11SKbQ5IMQf2GE45aMo91
6Ir1SoTt07oapTWSsp6YVfNKelYQJnbN43eu2laeTgJE4TRA6ypugNK/n4Rq
XRr1BNvJIWfXB22ZWIxzvMDJdy1FVT6jomO2RPF3YqY7viCk7TF9ImrEfFJe
TPwF/XUwAYq/pKYglLBqQskqIXfA0K3ac8vShPkSrJYTWMthiF0ZIxXMQ2Cp
JueJ/bR9mtAgkHQ4EQoq0M1GyEuIidMVO+y5jabkMs2bNoVRmzp4KSHTmxWR
ymSnmg21c3/ARAc00eHXnKgcqeDSe4FgJ44sQVDs3YqdGPjNovSLxls9mJgG
XzCFmbscfykbtRGMn4zVMZ+f514h91Z/9HkcAz3D5zSO3n78yME2w7ZrJ2/w
WatPW3TpUr8mOnmdUbVOaePXIuJWLGUKK+q49D6m8vrvOV97XpgmapG5G9Ca
1XVckXJ2FsIWoWOfDiz19Dkq01SWUTlroYh/5RtvyBBBnSqRq1dN5TRp63sD
1NnB6eHRXwZ6XSJiWOtyUcQb3AsAf5K6ErWyYJaSlG+2oJtmSzsfBuHhHQg+
INXX5AwDaO07O9DWphF9AKxHueJtIm+xC63UXp1kObzABT/LwLttKMDxZ2Qk
YKWZ0vj+RTSVKSVpgmOmhJuN1tXEQxD++6gpPfhOEW8yhf+5Duqycx2eKN32
qphSBamc4cvUyzflgZ1U0OWBhkvbHUA9p+F8LpXYDtplZKAeR541r0S3U4OF
VzOycEa2gbcL09QBXVdM0CIxYSlr6LB/R7ahxMJLccq8wpkmplQ70mCgGIgs
y7xSqrHiiZFT0pZ4T8MqfLT7QTlLOe3ntlQRfdpgKNBa7tfjN4CWIt0s4/A8
F0WNz6QgaSNSfGF9qSFnqRczN9v/pKZF2ZIPQ7xPwKmPtTAv9ud0R7FWbBkx
Mgjkvg+8lADWZtmINaLrrirnFEbDJ02VzeEe46UGnDjuHyNaZrUTgFwOQUss
/Y3L464lN7p8Qw7QTjOn5uL8aCT/5Jmcj2bXISbzsA8ImfC9x5S9wYDbcFFZ
tyiA8CifLjw3j5c+jodflJsWoRjo5OxWjSTr0saAQYLXXRZRq8OiaoLAVF+G
DfGC+SvdEq8MKs/oRnDKvCTBSyEYJb4pz/0VuEDq86lFDEaxPcozqdVijNps
r05Dzw1LdaKYdKHtxOG4d1mrV9UHhJxvWbkz8R13ykd+IQEcRphc8DmotOcV
IIzET+lO6XjhcZfeWlfda+WZ/dNGbLO441vNY1LWkUJZ+HyUwBanCk5Xubro
rQquFOsY2IMVzfLp7v6/+vi1c0QUakIK86q5Nuog2VAsgtreROlvgn98xFtO
BzcEFDIske5uIyXkICAEta51AE7S/Q8a1eHdZTjtdS4p2QnTmUwqtG5SdEvu
kn/khanGdxFLZU2R+VYZrgkxGxtxfJYWOTLLK22IM9g3V2E1zwJSZJeM/wvp
Z6WPhuSCNeyc+ShH3MvchRM9jlI/Ex3ATnwTVlp2Ao6orLWBLJTph1hnzd1m
ItBLM++p6E0jcTBzd8AAwiTC570T9UuhjPNmR5vy8B4DTGUowGwE6p7YgTKo
IQrikma2jmpT2oFYKCLeKXtR2vlixEr7au3BcnyjO+z2Hq49yD0wZsFUEX25
FbO/ShAb9kosKrBoXEX3Ui7ZwKs1KB7OpZ4ZSolUdgOUCGrIk+FhOvRKsZr7
rb2jWga9wHZExRwGaFEzLoook9PJnhPqX/+8OD083ZOiGbYusHfcz41Hed+9
f1P6mOvMAJUZDX58xDGNsJl9um3eaG0Gz5xrJvI2gQLLdVv0Pss48mrxcWm8
wIhULENfl6J6mOsrvZOB+bxiLjCL6uZCz5xAqZulEusrryP2MLJLwgoE2uUO
GjcxnU5TJnRlnDa+SWKLnDv/wCF7xkk2SXoLoDIY/WPZbDEWiP0Et64XXjOd
Z7UqFtgTha6UH7pinCTsZj8tYmqHDV9AQVhBZXx0UiyL2AAX5OIaHTGzk8H2
ttS4kaI2KeguFXo6c/G8evcJiW2vuD5lPVInoAdywmORpqyFq5UTlqHnwsb2
6k7bzN0vaxOAPTEVFCPqcYWUOlr6fCi41oI8/1jq1BV8Qegoex0eOSdMMpJY
LF5a2/bAv4rHz3NTtTw3rNApe8EOzHpBnHrGqTLDmHq6jexjn4ObKyXCzDnF
qchi/5Q+WFlNYnIKyipxXaVgq5Q/iInNePVsPW3LwNJM2nr91WBzYI64ryOK
dfX2kC9OOca7x2f2PPo5/LvAhJMk+L1b0u8fvTtsYDOwhLxp5gWe/obMhS7K
avELqnXj0+v3dnpbGxajXmcj9FZgaGIBDVzo1Xthu/dEirqocH54N+PE3PfG
l5b4NJ0mowJ9haZ69xiM+e/YQKrdnobUltzERhHAi6/ufA34FDo4Pwelrd/b
7A1+7XC+uTJpVECf5JauzU42tj7ncjGfmwS1qwXMhs64FQu8uN5l6Xj3tkiC
4Mk/Dk9f7h+fwKdTVOA7NgWxo9zhCHlEd/g2c1E3wgKvXslh5eX0XZD+OpGD
GwDGWNIHZgBjYn2U4yX+sGYNWscguDzuKA4wxqTM8Sy4IKuqlfUNyrwijU2K
fN4lXczFGQzq4TJU/aq85XeV27mIbgZvzZL3XHCFZPGHD17i1Ue5zbBRLd9T
0o0RgOIouK+SiO0VO4romuc2N9Dce26NbEtrMTJCk9tWv7IPVTx2UC87iXDk
xS33+bJEPJUQRx+9KxOLfLTgyzQbF9biuRVzX8eEBSTSlNy7yMXbzVfWuD1d
o34Lu28SXgqzrrwbj+3jjjjjTLfizl521xcVDnnAlTOMFBQFR/8uME2UL3zB
emUChqaEKpuIee2QPCUgy92pBodb08AYOWERPLK3XN0YRu5YldUqWa2dV8Ny
RRJdoApxQ0l+IfgBEGlKzll8FePdRdy8MEVW9l7uEMPxOP2GtlqZ/cXYKN5A
VZTxmvbO9XtXyoqLoPTkqinMrHgJLBJZR/J9LUGy5pK7LZVXiYVTKNAtexde
YWnv5KpfaHlgb0o2UjvUlNHX8uEbE/NRlnZX5EMSTLAWbztid5S5SNx/XL/K
G+t+BQ3gt+C58l1fS9XppVfR1tIT5PJxFfzsx51W38TDBKv3S8rC6qjIu4Ha
wLU5OcsFvMZIZMHtrv7+o0sPARyZW4kJe5ZckoNEYi2Fjivn4V032w0u3paL
YrkUDF0rCmK+zLNl9yxlsfjHyc1dakkKlpQluQnUZFTcXmOpOepkfKfXzS21
dW664Y4vyJW3nConjvt7r3ddSQKqhQT4AjlC3NrLhhUsW77x4ToPtfWWrUTq
OiLbOLKz0pDoxDoLpZYhxeyj73SlQtfiBqOyM3HGV4HmZHuRZWrlEXG1kttF
pbt/ehxgm6MBhOEM1bEoA0X8SG5gr/zBFQnINCVXKt/NikEkjGGJYu/IsMpz
LDFWVJbmOIHAzGFGgXg3pHBh2JIk5xQ2jMHj7I33iuyH5CrGB8q5P01Jo3cR
KjOdQAjMkuk1Uh1JgYYQUHUhYIFC6SoU3MQVyKRs1jUQCgbsQDNHqaOiqyou
QkDhsVZkmxuWGvEej2W6A8squblQyjGSnGmVeGVdaHhRJHOGLQnvBQ/QExfR
QE3JH1NMzN+JFMNHouFL8NcKeUoeQ87FIa6Qj6ka0yUGQsvi+trMP4ijTBbG
T5wUdneBOFxBR6rQdQBbSAEZpAyEBezpx5pL1xwLi+SALW47FSy3gYGwnfVG
KmPLeofcyBdsvFrkfZBSW+ZsBNnA/pFog5I8LC6Kz0635LnjvROlgyjWPxuZ
eHHJNv/YLFhKoCHzQW9LhV9s67Aha25gedCV2sElVx2R5PQOxjfBwmZDZvC/
+oNdTI0ARPfObil7PSabgEVMmWbiHaG7oudeoa8amyY3hr1gi6o8yyy7BeZ/
IsF30PTnmqNlHM6WBTKdtUKy9NPb3NVPidyBR+5+9kcfnvOBC8xfieT0DbDt
crwoOYsmI+IUL1YgMtgXsH+y32TEbdd+1n2KJvCPwKFeiniKOTZ3es33xJ3f
Aa7M9DoAd0O9igr4DX03a5zWPXIv1epV6vWzsw2N57TLtQ4q3VwNV+r0OZcs
ekVNcWR3Yh69z1q0+Iunh96Rc/precAGnf8gXK51G9KI4YK9a8Q81zalxinb
CE8rRZhhsiZ4Vneor7HtTSV/o9SLvCoOo9h+aJmbtBD0ikolYlpK3/wa2vf0
bOA9C212ejzsopcIHu/bzCKWp4hx5kraB2PAybmzTu0S1QnfDLvm76e3l3Sj
rGwj7AFOhoDUpQuFcD3Wx5BELO7rT9b75OSqv8/L7fgv8k/wwvYGMV+kAs4Q
y5upZZy0JHLeckbjcryO0znu08s8SwDroff1yzh5D0Z9po9BFUwqsFs3Ouo8
Qk+BfhOVKP3XD4BMcyGQEh6/iOF9LH5y9x5arT/NywrI93WWkDesuuPCI2q/
jK70z8lN6yAKby0dm5U43yXm9U6dDdhTp9mkiH/V5wvYrvWDn3snxwf6RTQq
ZZDDRQTy7BJvYU3xMndQB6gDaqLsXZugs2PgTnhk6OzytExS0sqSK/tRAEcc
GxRUwSOezgsCm9HtdukuZtqWI9ZykC2JwoO86JLLbZd47SI5Hkn+YlYUCLAF
FX3BK8ZvKd0ZR/HCeIUkRpmUO6OAo041wjTE6o7zBPhoghwz5OKx64C2Ecgk
0lmOT5wvE8uKuZK6pEQBD590lLu+VJQXh+/2HM4en42V9fXyAt3X/If9rute
r6c3tF7aCgCgo573hDsMfpLG+7r/ZICezF5fOuR7vlc2HaxodfGPC702lsWv
QUNqOWlpCbPMyn5v0pxo4+eeP/oWN5o+aDVtrWiKUzNF7u1PvSZ0qJ09n2Gb
2/B0UPeJizBaPyttZrAGybjUCrhd2wLXUfXYMyZH+Cr1dhuZqGdH8/WtpM/X
m9HZ2ghVAUFA5G/hYBuwCAyZ3zr/izx2hNHTGMoJtRpRvzH7xqI0F6o3Z25h
bWuAnWtECPuHh8cXx6cn+y9MAdeSZ4fOTCVJ141aj0LhShk9BBbDx1TZQKIc
qH1/cVFv1AtRUaLitVKr9WKvVFSUKpkEJdoaKQb1vv/ULAXUUm7Hvf+nxuxa
evBzGJrLwWpKuopSMsgoYxbPE9MthpxWQXYeJarmoOLFczbxSeXDs7fTWGOR
pYsc777DR0HmYxGDCpmVwne++053v//++dH+4dHZn//c1fkcAwB7+u+vj85+
+k5zIGjPxiC+08lkT28/GT4GijMdQNtz3HoNzBT/3dP2UXO3tPs7PhFCtlPZ
f33x/PTs+OKneletPQx3NjexE+STNYK+BgE6A3swLsLf16U//2+w2d/s9/uD
/pYe9LFL6ndnc2sX/tnd2YL/bixn0nYWnM9Kk+nvYLlv/H3JeI83t/qDzcHW
cLPPX4f9oXzd7gNsg4GKi8GwP+oXz0kSKGv2Nk67Uvk4u95xPsM7S74tXXHp
ug+6efi49jrwKddcbr8AYs9nlA7AHKKjjMej4d4uw5ts7d3EcvsgB13+/K6I
gQ1GxTSu/rIWXia49uh74F98AN4PzXS0u4baJcexj8U7pit1J9oQkPcVts3r
Y2t3e2dH78+m2WDw/nXy85Mf39xFFwB1D+bGcWo9KWsmCLQWjmM8CcSLSuLh
YV2y+zjPhefsaDnOiTWBI1OvRYW2futEYPanW3/bffLGbavvZsGdUjYBq8SA
GsdRqrbEvo1wemR+rqzhqtfLmFny2iYIDOtEQgv1+FArgv2GnCkSmDWcDo1y
bmpZPTefCyMme6m4uNAWJMm33u4+uQkxJUQSaMQYsqk3T7eevDoGwYRagxD+
/b1IQ+kNmMRQnv0RXOL94cnF+cu/n6TvH8ImGlz5UxnFqFdnFRctFCneW+/U
exe67l6lpvRPm3RYQZqLm5sffxu9Hh+Vu+XB/Kd20vRo02RmrtUHqlEnklAr
pjWSDWv9eGRgiG/JSGhdn26fPutQFe0yLKOt6nW0Y3/uZj1BRW29bvtlbNxY
UWPba/x0HyD63NQG2sy3nsyTe7DeQ3x+W6830BWNfpB8jOKSdG3dMRsPGGw5
cXwxaWw9v+gvfu3/lL58fypTkRQ/LEPme8xMCV1yr3F5wNxXvP/r30Hh5Qdp
ry//4auvf6TqGkLySo4887GByhx3wPHxkAWuRv2xOuHp0dnZ6RmrhMPdx7t9
tVQjNA+a1A5b//IfKxTAVsXL1/zw76Ha3x+o+9XUvpre96ko+sgqeY/mn6rh
Gb7dUhKHUzrdfe+1dy1TiBpqHaxxmdqlPk/terjG9TnqVo/9OY58FeC9qTJW
Wi3EHEJDuW1rkJV8xWFSLtG3VEPf0iv0raYO40sV1Ua1bTRrK5T2tLvHQZIo
/ljV5QGdfEXm7PSWRz9ucDJv3c9i8+ApsYlvjTIluco5fPl0L8JVntd8Mko9
j4u4U/PFEA6udvwYAV+am8KaE/xkPt9wGAQnPRpKSc27hD3g8OgvwARRqYeS
mHifvb9Ljq3U+1NtHbZ6TZr1qQL33leTNlvbuzs790ub5i5bNAWkXuV2WOrH
ZPbOhMU/NN179zDwerefqnpPWrhNOEpS6pZCU73l3lkmZueR8bqjP+HTT57N
Z/Hzx09+ezzdeXNyuZJPO/U1pChi00gqPoYieipnIfZbLERnINa5b9i/8lTd
F0e7L8422hTuhr6t7te3RXPWq9TsH//+9OUPWxuSm2BlAGYD5gZGAB2uht3E
ho4eLSqbYcspJCarg06gYSXEzPXD7I14AGcieZBprrpmZYguj8vhaRubLIJ5
Xz9InPTlzaY4WdnJVxQnV79ejPOzv00nL1/07zOCv8hTFhq/X+qiauNRbQqT
T42/3pavDn78eff980eHmxfFA7WmgBZrNrAO0jsih7BlAK8a2/l0fak5B2vF
wupDdafNV/Mgq/WLTNavZbEOtwZoJBgs5q/3WqzBNQgPUnaQGmvqTtSQUZ9t
eWKj2giBW64WX2vVaFq9K63z/FpKxPbw8fABJmtzTp4OAVBoobtVsMH8oZrA
chU36SRRaRQ2oJ2hiRwzsnGnxnmDmsvJ+eXRWTjnZRM2FivODv9aop0Ped2g
PXZDSM+Bji/m3FEcvZj+vFu+/c8nuxuf6hAwf2aSRjmrI9ND3nV07Qdyvnh9
u+8XJ5vXg3fbl3fP7pNMbXtAKUWf7GBdspv3ypbfnm0/++GHN2W+tfliEj1Q
02ufdo37q0Yr7PfZ6dnhy1OuOvQAdc0JiWVO0Qdoa56qaPS2h8UfPL6lWvgW
qQRhwKEpw/DvSzWtB/XzQDH1JYpW+z09n+Ed/YPl1KpAvWpJA3mAC7U9nv/f
L8z6j4fDwZcIM+2sv0/3x+r/J1yyLTy8Fo3/Yibu+2nvDbL9KeQJcksP2xgt
2rHnp/1TnZt8qX3RzHi6TwL8Ntw9u7x8dT0qH91UyfUDrYvaOLxiLOnleWY/
zTGrVhgazUB4zdBoLLseB24BFXzZGW890LjgiHrd+F3ZxVc0fmfD48fbVTW+
vH1zcC92tsisFSFc9Wkqxv81/eKT1IvOQ/WLBCu11+49+3xFo03P0CujBA2T
oSG9Pkt2PQT9/7/x/iABfKMPqCChfpFPzbWwuT57dqCPJkmVF5KB2VovJR+V
eRrzrQLmTiwFr2Kl0ziiq8xnuTleRzVvJ8k7wCGqu8wJM3ICkQgQ3qTkdIC4
hrV2bbJ/reipnUi5GM2SSvK4Z1FCxRzxhnQu3ofnALCbKxjUBtqb9Y6xjndE
BeJ8uqZaAdCDeZZkgAJ8qiRfVPTZHWxw5bEcoeG77iIIWhhsSJcC6suPvZvM
UG4/kPa1CgB8DdCbs2d8S9gMYL0obEloW5IL76ovoRt7a1A8mycFUTPWluUh
hjDESzy8Bc+XXN/wxp5l9uaN1xmumPkWdIsIpM8iLjkRd/Dck8DnMi/eSlHL
9lP60IVNkeUrXyNsBEyBOg0uEpSGdC0ZIuD3bh1hpj2tBo+enDFanp3vdxk2
HAT+vlYuBhvewrDxqv3C4wDfLykaYpaAJygAJlhlRIa2xMAjUg4+nQGT2xq4
ECKxOkBtePnDhzDtj+q24uZ/+CDkTTUZ/w/p5xrimtYAAA==

-->

</rfc>

