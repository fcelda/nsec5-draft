<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.6 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC1034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY RFC1035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1035.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2136 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2136.xml">
<!ENTITY RFC2181 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2181.xml">
<!ENTITY RFC2308 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2308.xml">
<!ENTITY RFC4033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4033.xml">
<!ENTITY RFC4034 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4034.xml">
<!ENTITY RFC4035 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4035.xml">
<!ENTITY RFC4648 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml">
<!ENTITY RFC5114 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5114.xml">
<!ENTITY RFC5155 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5155.xml">
<!ENTITY RFC6234 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6234.xml">
<!ENTITY RFC6605 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6605.xml">
<!ENTITY RFC7748 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7748.xml">
<!ENTITY RFC8080 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8080.xml">
<!ENTITY I-D.goldbe-vrf SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.goldbe-vrf.xml">
<!ENTITY RFC6781 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6781.xml">
<!ENTITY RFC7129 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7129.xml">
<!ENTITY RFC7719 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7719.xml">
<!ENTITY I-D.gieben-nsec4 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.gieben-nsec4.xml">
]>

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-vcelak-nsec5-06" category="std">

  <front>
    <title abbrev="NSEC5">NSEC5, DNSSEC Authenticated Denial of Existence</title>

    <author initials="J." surname="Vcelak" fullname="Jan Vcelak">
      <organization>CZ.NIC</organization>
      <address>
        <postal>
          <street>Milesovska 1136/5</street>
          <city>Praha</city>
          <code>130 00</code>
          <country>CZ</country>
        </postal>
        <email>jan.vcelak@nic.cz</email>
      </address>
    </author>
    <author initials="S." surname="Goldberg" fullname="Sharon Goldberg">
      <organization>Boston University</organization>
      <address>
        <postal>
          <street>111 Cummington St, MCS135</street>
          <city>Boston</city>
          <region>MA</region>
          <code>02215</code>
          <country>USA</country>
        </postal>
        <email>goldbe@cs.bu.edu</email>
      </address>
    </author>
    <author initials="D." surname="Papadopoulos" fullname="Dimitrios Papadopoulos">
      <organization>HKUST</organization>
      <address>
        <postal>
          <street>Clearwater Bay</street>
          <country>Hong Kong</country>
        </postal>
        <email>dipapado@ust.hk</email>
      </address>
    </author>
    <author initials="S." surname="Huque" fullname="Shumon Huque">
      <organization>Salesforce</organization>
      <address>
        <postal>
          <street>2550 Wasser Terr</street>
          <city>Herndon</city>
          <region>VA</region>
          <code>20171</code>
          <country>USA</country>
        </postal>
        <email>shuque@gmail.com</email>
      </address>
    </author>
    <author initials="D.C." surname="Lawrence" fullname="David C Lawrence">
      <organization>Akamai Technologies</organization>
      <address>
        <postal>
          <street>150 Broadway</street>
          <city>Boston</city>
          <region>MA</region>
          <code>02142-1054</code>
          <country>USA</country>
        </postal>
        <email>tale@akamai.com</email>
      </address>
    </author>

    <date year="2018"/>

    <area>Internet</area>
    <workgroup>Network Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>The Domain Name System Security Extensions (DNSSEC) introduced two 
resource records (RR) for authenticated denial of existence: the
NSEC RR and the NSEC3 RR. This
document introduces NSEC5 as an alternative mechanism for DNSSEC
authenticated denial of existence.  NSEC5 uses verifiable random
functions (VRFs) to prevent offline enumeration of zone
contents. NSEC5 also protects the integrity of the zone contents even
if an adversary compromises one of the authoritative servers for the
zone.  Integrity is preserved because NSEC5 does not require private
zone-signing keys to be present on all authoritative servers for the
zone, in contrast to DNSSEC online signing schemes like NSEC3 White
Lies.</t>



    </abstract>


    <note title="Ed note">


<t>Text inside square brackets ([]) is additional background
information, answers to frequently asked questions, general musings,
etc.  They will be removed before publication.  This document is being
collaborated on in GitHub at
&lt;https://github.com/fcelda/nsec5-draft&gt;.  The most recent version of
the document, open issues, etc should all be available here.  The
authors gratefully accept pull requests.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<section anchor="rationale" title="Rationale">

<t>NSEC5 provides an alternative mechanism for authenticated denial of
existence for the DNS Security Extensions (DNSSEC). NSEC5 has two key
security properties.  First, NSEC5 protects the integrity of the zone
contents even if an adversary compromises one of the authoritative
servers for the zone.  Second, NSEC5 prevents offline zone
enumeration, where an adversary makes a small number of online DNS
queries and then processes them offline in order to learn all of the
names in a zone. Zone enumeration can be used to identify routers,
servers or other "things" that could then be targeted in more complex
attacks. An enumerated zone can also be a source of probable email
addresses for spam, or as a "key for multiple WHOIS queries to reveal
registrant data that many registries may have legal obligations to
protect" <xref target="RFC5155"/>.</t>

<t>All other DNSSEC mechanisms for authenticated denial of existence
either fail to preserve integrity against a compromised server, or
fail to prevent offline zone enumeration.</t>

<t>When offline signing with NSEC is used <xref target="RFC4034"/>, an NSEC chain of
all existing domain names in the zone is constructed and signed
offline. The chain is made of resource records (RRs), where each RR
represents two consecutive domain names in canonical order present in
the zone.  The authoritative server proves the non-existence of a name
by presenting a signed NSEC RR which covers the name.  Because the
authoritative server does not need not to know the private
zone-signing key, the integrity of the zone is protected even if the
server is compromised.  However, the NSEC chain allows for easy zone
enumeration: N queries to the server suffice to learn all N names in
the zone (see e.g., <xref target="nmap-nsec-enum"/>, <xref target="nsec3map"/>, and
<xref target="ldns-walk"/>).</t>

<t>When offline signing with NSEC3 is used <xref target="RFC5155"/>, the original
names in the NSEC chain are replaced by their cryptographic
hashes. Offline signing ensures that NSEC3 preserves integrity even if
an authoritative server is compromised. However, offline zone
enumeration is still possible with NSEC3 (see e.g., <xref target="nsec3walker"/>,
<xref target="nsec3gpu"/>), and is part of standard network reconnaissance tools
(e.g., <xref target="nmap-nsec3-enum"/>, <xref target="nsec3map"/>).</t>

<t>When online signing is used, the authoritative server holds the
private zone-signing key and uses this key to synthesize NSEC or NSEC3
responses on the fly (e.g.  NSEC3 White Lies (NSEC3-WL) or
Minimally-Covering NSEC, both described in <xref target="RFC7129"/>).  Because the
synthesized response only contains information about the queried name
(but not about any other name in the zone), offline zone enumeration
is not possible.  However, because the authoritative server holds the
private zone-signing key, integrity is lost if the authoritative
server is compromised.</t>

<texttable>
      <ttcol align='left'>Scheme</ttcol>
      <ttcol align='right'>Integrity vs network attacks?</ttcol>
      <ttcol align='right'>Integrity vs compromised auth. server?</ttcol>
      <ttcol align='right'>Prevents offline zone enumeration?</ttcol>
      <ttcol align='right'>Online crypto?</ttcol>
      <c>Unsigned</c>
      <c>NO</c>
      <c>NO</c>
      <c>YES</c>
      <c>NO</c>
      <c>NSEC</c>
      <c>YES</c>
      <c>YES</c>
      <c>NO</c>
      <c>NO</c>
      <c>NSEC3</c>
      <c>YES</c>
      <c>YES</c>
      <c>NO</c>
      <c>NO</c>
      <c>NSEC3-WL</c>
      <c>YES</c>
      <c>NO</c>
      <c>YES</c>
      <c>YES</c>
      <c>NSEC5</c>
      <c>YES</c>
      <c>YES</c>
      <c>YES</c>
      <c>YES</c>
</texttable>

<t>NSEC5 prevents offline zone enumeration and also protects integrity
even if a zone's authoritative server is compromised.  To do this,
NSEC5 replaces the unkeyed cryptographic hash function used in NSEC3
with a verifiable random function (VRF) <xref target="I-D.goldbe-vrf"/> <xref target="MRV99"/>.  A VRF is the
public-key version of a keyed cryptographic hash.  Only the holder of
the private VRF key can compute the hash, but anyone with public VRF
key can verify the correctness of the hash.</t>

<t>The public VRF key is distributed in an NSEC5KEY RR, similar to a
DNSKEY RR, and is used to verify NSEC5 hash values.  The private VRF
key is present on all authoritative servers for the zone, and is used
to compute hash values. For every query that elicits a negative
response, the authoritative server hashes the query on the fly using
the private VRF key, and also returns the corresponding precomputed
NSEC5 record(s). In contrast to the online signing approach
<xref target="RFC7129"/>, the private key that is present on all authoritative
servers for NSEC5 cannot be used to modify the zone contents.</t>

<t>Like online signing approaches, NSEC5 requires the authoritative
server to perform online public key cryptographic operations for every
query eliciting a denying response.  This is necessary; <xref target="nsec5"/>
proved that online cryptography is required to prevent offline zone
enumeration while still protecting the integrity of zone contents
against network attacks.</t>

<t>NSEC5 is not intended to replace NSEC or NSEC3. It is an alternative
mechanism for authenticated denial of existence.  This document
specifies NSEC5 based on the VRFs in <xref target="I-D.goldbe-vrf"/> over the
FIPS 186-3 P-256 elliptic curve and over the
the Ed25519 elliptic curve. A formal cryptographic proof of security
for NSEC5 is in <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="requirements" title="Requirements">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The reader is assumed to be familiar with the basic DNS and DNSSEC
concepts described in <xref target="RFC1034"/>, <xref target="RFC1035"/>, <xref target="RFC4033"/>,
<xref target="RFC4034"/>, and <xref target="RFC4035"/>; subsequent RFCs that update them in
<xref target="RFC2136"/>, <xref target="RFC2181"/>, <xref target="RFC2308"/>, <xref target="RFC5155"/>, and <xref target="RFC7129"/>;
and DNS terms in <xref target="RFC7719"/>.</t>

<t>The reader should also be familiar with verifiable random functions (VRFs)
as defined in <xref target="I-D.goldbe-vrf"/>.</t>

<t>The following terminology is used through this document:</t>

<t><list style="hanging">
  <t hangText='Base32hex:'>
  The "Base 32 Encoding with Extended Hex Alphabet" as specified
in <xref target="RFC4648"/>. The padding characters ("=") are not
used in the NSEC5 specification.</t>
  <t hangText='Base64:'>
  The "Base 64 Encoding" as specified in <xref target="RFC4648"/>.</t>
  <t hangText='QNAME:'>
  The domain name being queried (query name).</t>
  <t hangText='Private NSEC5 key:'>
  The private key for the verifiable random function (VRF).</t>
  <t hangText='Public NSEC5 key:'>
  The public key for the VRF.</t>
  <t hangText='NSEC5 proof:'>
  A VRF proof. The holder of
the private NSEC5 key (e.g., authoritative server) can
compute the NSEC5 proof for an input domain name.
Anyone who knows the public VRF key can verify
that the NSEC5 proof corresponds to the input domain name.</t>
  <t hangText='NSEC5 hash:'>
  A cryptographic digest of an NSEC5 proof. If the NSEC5
proof is known, anyone can compute its corresponding NSEC5 hash.</t>
  <t hangText='NSEC5 algorithm:'>
  A triple of VRF algorithms that 
  compute an NSEC5 proof (VRF_prove),
  verify an NSEC5 proof (VRF_verify), 
  and process an NSEC5 proof to obtain its NSEC5 hash (VRF_proof2hash).</t>
</list></t>

</section>
</section>
<section anchor="backward-compatibility" title="Backward Compatibility">

<t>The specification describes a protocol change that is not backward
compatible with <xref target="RFC4035"/> and <xref target="RFC5155"/>. An NSEC5-unaware resolver
will fail to validate responses introduced by this document.</t>

<t>To prevent NSEC5-unaware resolvers from attempting to validate the
responses, new DNSSEC algorithms identifiers are introduced in
<xref target="iana_considerations"/> which alias existing algorithm numbers. The
zones signed according to this specification MUST use only these
algorithm identifiers, thus NSEC5-unaware resolvers will treat the
zone as insecure.</t>

</section>
<section anchor="how-nsec5-works" title="How NSEC5 Works">

<t>With NSEC5, the original domain name is hashed using a VRF <xref target="I-D.goldbe-vrf"/>
using the following steps:</t>

<t><list style="numbers">
  <t>The domain name is processed using a VRF keyed with the private
  NSEC5 key to obtain the NSEC5 proof.  Anyone who knows the public
  NSEC5 key, normally acquired via an NSEC5KEY RR, can verify that a
  given NSEC5 proof corresponds to a given domain name.</t>
  <t>The NSEC5 proof is then processed using a publicly-computable VRF
  proof2hash function to obtain the NSEC5 hash.  The NSEC5 hash can
  be computed by anyone who knows the input NSEC5 proof.</t>
</list></t>

<t>The NSEC5 hash determines the position of a domain name in an NSEC5
chain.</t>

<t>To sign a zone, the private NSEC5 key is used to compute the NSEC5
hashes for each name in the zone. These NSEC5 hashes are sorted in
canonical order <xref target="RFC4034"/>, and each consecutive pair forms an NSEC5
RR.  Each NSEC5 RR is signed offline using the private zone-signing
key.  The resulting signed chain of NSEC5 RRs is provided to all
authoritative servers for the zone, along with the private NSEC5 key.</t>

<t>To prove non-existence of a particular domain name in response to a
query, the server uses the private NSEC5 key to compute the NSEC5
proof and NSEC5 hash corresponding to the queried name.  The server
then identifies the NSEC5 RR that covers the NSEC5 hash, and responds
with this NSEC5 RR and its corresponding RRSIG signature RRset, as
well as a synthesized NSEC5PROOF RR that contains the NSEC5 proof
corresponding to the queried name.</t>

<t>To validate the response, the client verifies the following items:</t>

<t><list style="symbols">
  <t>The client uses the public NSEC5 key, normally acquired from the
NSEC5KEY RR, to verify that the NSEC5 proof in the NSEC5PROOF RR
corresponds to the queried name.</t>
  <t>The client uses the VRF proof2hash function to compute the NSEC5
hash from the NSEC5 proof in the NSEC5PROOF RR.  The client verifies
that the NSEC5 hash is covered by the NSEC5 RR.</t>
  <t>The client verifies that the NSEC5 RR is validly signed by the RRSIG
RRset.</t>
</list></t>

</section>
<section anchor="nsec5-algorithms" title="NSEC5 Algorithms">

<t>The algorithms used for NSEC5 authenticated denial are independent of
the algorithms used for DNSSEC signing. An NSEC5 algorithm defines how
the NSEC5 proof and the NSEC5 hash are computed and validated.</t>

<t>The NSEC5 proof corresponding to a name is computed using ECVRF_prove(), 
as specified in <xref target="I-D.goldbe-vrf"/>.
The input to ECVRF_prove() is 
a public NSEC5 key followed by
a private NSEC5 key followed by
an RR owner name in <xref target="RFC4034"/> canonical wire format.
The output NSEC5 proof is an octet string.</t>

<t>An NSEC5 hash corresponding to a name is computed from 
its NSEC5 proof using ECVRF_proof2hash(), as specified in <xref target="I-D.goldbe-vrf"/>.
The input to VRF_proof2hash() is 
an NSEC5 proof as an octet string. 
The output NSEC5 hash is either an octet string, or INVALID.</t>

<t>An NSEC5 proof for a name is verified using ECVRF_verify(),  as specified in
<xref target="I-D.goldbe-vrf"/>.
The input is the NSEC5 public key, 
followed by an NSEC5 proof as an octet string,
followed by an RR owner name in <xref target="RFC4034"/> canonical wire format.
The output is either VALID or INVALID.</t>

<t>This document defines the EC-P256-SHA256 NSEC5 algorithm as follows:</t>

<t><list style="symbols">
  <t>The VRF is the EC-VRF algorithm using the EC-VRF-P256-SHA256 
ciphersuite specified in <xref target="I-D.goldbe-vrf"/>.</t>
  <t>The public key format to be used in the NSEC5KEY RR is defined in
Section 4 of <xref target="RFC6605"/> and thus is the same as the format used to
store ECDSA public keys in DNSKEY RRs. <vspace />
[NOTE: This specification does 
not compress the elliptic curve point used for the public key,
but we do compress curve points in every other place we use them. The NSEC5KEY record can be shrunk by 31 additional octets by encoding the 
public key with point compression.]</t>
</list></t>

<t>This document defines the EC-ED25519-SHA256 NSEC5 algorithm as follows:</t>

<t><list style="symbols">
  <t>The VRF is the EC-VRF algorithm using the EC-VRF-ED25519-SHA256
ciphersuite specified in <xref target="I-D.goldbe-vrf"/>.</t>
  <t>The public key format to be used in the NSEC5KEY RR is defined in
Section 3 of <xref target="RFC8080"/> and thus is the same as the format used to
store Ed25519 public keys in DNSKEY RRs.</t>
</list></t>

</section>
<section anchor="the-nsec5key-resource-record" title="The NSEC5KEY Resource Record">

<t>The NSEC5KEY RR stores a public NSEC5 key. The key allows clients to
validate an NSEC5 proof sent by a server.</t>

<section anchor="nsec5key-rdata-wire-format" title="NSEC5KEY RDATA Wire Format">

<t>The RDATA for the NSEC5KEY RR is as shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Algorithm   |                  Public Key                   /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>Algorithm is a single octet identifying the NSEC5 algorithm.</t>

<t>Public Key is a variable-sized field holding public key material for
NSEC5 proof verification.</t>

</section>
<section anchor="nsec5key-rdata-presentation-format" title="NSEC5KEY RDATA Presentation Format">

<t>The presentation format of the NSEC5KEY RDATA is as follows:</t>

<t>The Algorithm field is represented as an unsigned decimal integer.</t>

<t>The Public Key field is represented in Base64 encoding. Whitespace is
allowed within the Base64 text.</t>

</section>
</section>
<section anchor="the-nsec5-resource-record" title="The NSEC5 Resource Record">

<t>The NSEC5 RR provides authenticated denial of existence for an RRset
or domain name. One NSEC5 RR represents one piece of an NSEC5 chain,
proving existence of the owner name and non-existence of other domain
names in the part of the hashed domain space that is covered until the next
owner name hashed in the RDATA.</t>

<section anchor="nsec5-rdata-wire-format" title="NSEC5 RDATA Wire Format">

<t>The RDATA for the NSEC5 RR is as shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Key Tag            |     Flags     |  Next Length  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                     Next Hashed Owner Name                    /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
/                         Type Bit Maps                         /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>The Key Tag field contains the key tag value of the NSEC5KEY RR that
validates the NSEC5 RR, in network byte order. The value is computed
from the NSEC5KEY RDATA using the same algorithm used to
compute key tag values for DNSKEY RRs. This algorithm is defined in
<xref target="RFC4034"/>.</t>

<t>The Flags field is a single octet. The meaning of individual bits of
the field is defined in <xref target="nsec5_flags"/>.</t>

<t>The Next Length field is an unsigned single octet specifying the
length of the Next Hashed Owner Name field in octets.</t>

<t>The Next Hashed Owner Name field is a sequence of binary octets. It
contains an NSEC5 hash of the next domain name in the NSEC5 chain.</t>

<t>Type Bit Maps is a variable-sized field encoding RR types present at
the original owner name matching the NSEC5 RR. The format of the field
is equivalent to the format used in the NSEC3 RR, described in
<xref target="RFC5155"/>.</t>

</section>
<section anchor="nsec5_flags" title="NSEC5 Flags Field">

<t>The following one-bit NSEC5 flags are defined:</t>

<figure><artwork><![CDATA[
 0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+-+
|           |W|O|
+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t><list style='empty'>
  <t>O - Opt-Out flag</t>
</list></t>

<t><list style='empty'>
  <t>W - Wildcard flag</t>
</list></t>

<t>All the other flags are reserved for future use and MUST be zero.</t>

<t>The Opt-Out flag has the same semantics as in NSEC3. The definition
and considerations in <xref target="RFC5155"/> are valid, except that NSEC3 is
replaced by NSEC5.</t>

<t>The Wildcard flag indicates that a wildcard synthesis is possible at
the original domain name level (i.e., there is a wildcard node
immediately descending from the immediate ancestor of the original
domain name).  The purpose of the Wildcard flag is to reduce the
maximum number of RRs required for an authenticated denial of
existence proof from (at most) three to (at most) two, 
as originally described in <xref target="I-D.gieben-nsec4"/>
Section 7.2.1.</t>

</section>
<section anchor="nsec5-rdata-presentation-format" title="NSEC5 RDATA Presentation Format">

<t>The presentation format of the NSEC5 RDATA is as follows:</t>

<t>The Key Tag field is represented as an unsigned decimal integer.</t>

<t>The Flags field is represented as an unsigned decimal integer.</t>

<t>The Next Length field is not represented.</t>

<t>The Next Hashed Owner Name field is represented as a sequence of
case-insensitive Base32hex digits without any whitespace and without
padding.</t>

<t>The Type Bit Maps representation is equivalent to the representation
used in NSEC3 RR, described in <xref target="RFC5155"/>.</t>

</section>
</section>
<section anchor="the-nsec5proof-resource-record" title="The NSEC5PROOF Resource Record">

<t>The NSEC5PROOF record is not to be included in the zone file.  The
NSEC5PROOF record contains the NSEC5 proof, proving the position of
the owner name in an NSEC5 chain.</t>

<section anchor="nsec5proof_rdata" title="NSEC5PROOF RDATA Wire Format">

<t>The RDATA for the NSEC5PROOF RR is shown below:</t>

<figure><artwork><![CDATA[
                     1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            Key Tag            |        Owner Name Hash        /
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>Key Tag field contains the key tag value of the NSEC5KEY RR that
validates the NSEC5PROOF RR, in network byte order.</t>

<t>Owner Name Hash is a variable-sized sequence of binary octets encoding
the NSEC5 proof of the owner name of the RR.</t>

</section>
<section anchor="nsec5proof-rdata-presentation-format" title="NSEC5PROOF RDATA Presentation Format">

<t>The presentation format of the NSEC5PROOF RDATA is as follows:</t>

<t>The Key Tag field is represented as an unsigned decimal integer.</t>

<t>The Owner Name Hash is represented in Base64 encoding. Whitespace is
allowed within the Base64 text.</t>

</section>
</section>
<section anchor="nsec5_proofs" title="Types of Authenticated Denial of Existence with NSEC5">

<t>This section summarizes all possible types of authenticated denial of
existence.  For each type the following lists are included:</t>

<t><list style="numbers">
  <t>Facts to prove: the minimum amount of information that an
  authoritative server must provide to a client to assure the client
  that the response content is valid.</t>
  <t>Authoritative server proofs: the names for which the NSEC5PROOF RRs
  are synthesized and added into the response along with the NSEC5 RRs
  matching or covering each such name. These records together prove
  the listed facts.</t>
  <t>Validator checks: the individual checks that a validating server is
  required to perform on a response. The response content is
  considered valid only if all of the checks pass.</t>
</list></t>

<t>If NSEC5 is said to match a domain name, the owner name of the NSEC5
RR has to be equivalent to an NSEC5 hash of that domain name. If an
NSEC5 RR is said to cover a domain name, the NSEC5 hash of the domain
name must sort in canonical order between that NSEC5 RR's Owner Name
and Next Hashed Owner Name.</t>

<section anchor="name-error-responses" title="Name Error Responses">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>Non-existence of the domain name that explictly matches the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of the wildcard that matches the QNAME.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for closest encloser and matching NSEC5 RR.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<!-- Dimitris 01/2018 commented out the next two. They are covered by the last two validator checks, right?-->

<!-- The QNAME does not fall into a delegation.-->

<!-- The QNAME does not fall into a DNAME redirection.-->

<t><list style='empty'>
  <t>Closest encloser is in the zone.</t>
</list></t>

<t><list style='empty'>
  <t>The NSEC5 RR matching the closest encloser has its Wildcard flag cleared.</t>
</list></t>

<t><list style='empty'>
  <t>The NSEC5 RR matching the closest encloser does not have NS without SOA in the Type Bit Map.</t>
</list></t>

<t><list style='empty'>
  <t>The NSEC5 RR matching the closest encloser does not have DNAME in
  the Type Bit Map.</t>
</list></t>

<!--> Next closer name is derived correctly.-->

<t><list style='empty'>
  <t>Next closer name is not in the zone.</t>
</list></t>

</section>
<section anchor="no-data-responses" title="No Data Responses">

<t>The processing of a No Data response for DS QTYPE differs if the
Opt-Out is in effect. For DS QTYPE queries, the validator has two
possible checking paths.  The correct path can be simply decided by
inspecting if the NSEC5 RR in the response matches the QNAME.</t>

<t>Note that the Opt-Out is valid only for DS QTYPE queries.</t>

<section anchor="no-data-response-opt-out-not-in-effect" title="No Data Response, Opt-Out Not In Effect">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>Existence of an RRset explicitly matching the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of QTYPE RRset matching the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of CNAME RRset matching the QNAME.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for the QNAME and matching NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>QNAME is in the zone.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching the QNAME does not have QTYPE in Type Bit Map.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching the QNAME does not have CNAME in Type Bit Map.</t>
</list></t>

</section>
<section anchor="no-data-response-opt-out-in-effect" title="No Data Response, Opt-Out In Effect">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>The delegation is not covered by the NSEC5 chain.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for closest provable encloser and matching NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Closest provable encloser is in zone.</t>
</list></t>

<t><list style='empty'>
  <t>Closest provable encloser covers (not matches) the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching the closest provable encloser has Opt-Out flag set.</t>
</list></t>

</section>
</section>
<section anchor="wildcard-responses" title="Wildcard Responses">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>A signed positive response to the QNAME demonstrating the existence of the wildcard (label count in RRSIG is less than in QNAME), and also providing closest encloser name.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of the domain name matching the QNAME.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>A signed positive response for the wildcard expansion of the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<!--> Next closer name is derived correctly.-->

<t><list style='empty'>
  <t>Next closer name is not in the zone.</t>
</list></t>

</section>
<section anchor="wildcard-no-data-responses" title="Wildcard No Data Responses">

<t>Facts to prove:</t>

<t><list style='empty'>
  <t>The existence of the wildcard at the closest encloser to the QNAME.</t>
</list></t>

<t><list style='empty'>
  <t>Non-existence of both the QTYPE and of the CNAME type that matches QNAME via wildcard expansion.</t>
</list></t>

<t>Authoritative server proofs:</t>

<t><list style='empty'>
  <t>NSEC5PROOF for source of synthesis (i.e., wildcard at closest
encloser) and matching NSEC5 RR.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF for next closer name and covering NSEC5 RR.</t>
</list></t>

<t>Validator checks:</t>

<t><list style='empty'>
  <t>Closest encloser to the QNAME exists.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5 RR matching the wildcard label prepended to the closest encloser, and which does not have the bits corresponding to the QTYPE and CNAME types set it the type bitmap.</t>
</list></t>

</section>
</section>
<section anchor="authoritative-server-considerations" title="Authoritative Server Considerations">

<section anchor="zone_signing" title="Zone Signing">

<t>Zones using NSEC5 MUST satisfy the same properties as described in
Section 7.1 of <xref target="RFC5155"/>, with NSEC3 replaced by NSEC5. In addition,
the following conditions MUST be satisfied as well:</t>

<t><list style="symbols">
  <t>If the original owner name has a wildcard label immediately
descending from the original owner name, the corresponding NSEC5 RR
MUST have the Wildcard flag set in the Flags field. Otherwise, the
flag MUST be cleared.</t>
  <t>The zone apex MUST include an NSEC5KEY RRset containing a NSEC5
public key allowing verification of the current NSEC5 chain.</t>
</list></t>

<t>The following steps describe one possible method to properly add
required NSEC5 related records into a zone. This is not the only such
existing method.</t>

<t><list style="numbers">
  <t>Select an algorithm for NSEC5 and generate the public and private NSEC5 keys.</t>
  <t>Add an NSEC5KEY RR into the zone apex containing the public NSEC5 key.</t>
  <t>For each unique original domain name in the zone and each empty
  non-terminal, add an NSEC5 RR. If Opt-Out is used, owner names of
  unsigned delegations MAY be excluded.  <vspace blankLines='1'/>
A. The owner name of the NSEC5 RR is the NSEC5 hash of the
   original owner name encoded in Base32hex without padding,
   prepended as a single label to the zone name.  <vspace blankLines='1'/>
B. Set the Key Tag field to be the key tag corresponding
   to the public NSEC5 key.  <vspace blankLines='1'/>
C. Clear the Flags field. If Opt-Out is being used, set the Opt-Out
   flag. If there is a wildcard label directly descending from the
   original domain name, set the Wildcard flag. Note that the
   wildcard can be an empty non-terminal (i.e., the wildcard synthesis
   does not take effect and therefore the flag is not to be set).  <vspace blankLines='1'/>
D. Set the Next Length field to a value determined by the used
   NSEC5 algorithm. Leave the Next Hashed Owner Name field blank.  <vspace blankLines='1'/>
E. Set the Type Bit Maps field based on the RRsets present at the
   original owner name.</t>
  <t>Sort the set of NSEC5 RRs into canonical order.</t>
  <t>For each NSEC5 RR, set the Next Hashed Owner Name field by using
  the owner name of the next NSEC5 RR in the canonical order. If the
  updated NSEC5 is the last NSEC5 RR in the chain, the owner name of the
  first NSEC5 RR in the chain is used instead.</t>
</list></t>

<t>The NSEC5KEY and NSEC5 RRs MUST have the same class as the zone SOA
RR.  Also the NSEC5 RRs SHOULD have the same TTL value as the SOA
minimum TTL field.</t>

<t>Notice that a use of Opt-Out is not indicated in the zone. This does
not affect the ability of a server to prove insecure delegations. The
Opt-Out MAY be part of the zone-signing tool configuration.</t>

<section anchor="precompute" title="Precomputing Closest Provable Encloser Proofs">

<t>Per <xref target="nsec5_proofs"/>, the worst-case scenario when answering a negative 
query with NSEC5 requires the authoritative server to respond with two 
NSEC5PROOF RRs and
two NSEC5 RRs. One pair of NSEC5PROOF and NSEC5
RRs corresponds to the closest provable encloser, and the other pair
corresponds to the next closer name.  The NSEC5PROOF corresponding to
the next closer name MUST be computed on the fly by the authoritative
server when responding to the query. However, the NSEC5PROOF
corresponding to the closest provable encloser MAY be precomputed and
stored as part of zone signing.</t>

<t>Precomputing NSEC5PROOF RRs can halve the number of online
cryptographic computations required when responding to a negative
query. NSEC5PROOF RRs MAY be precomputed as part of zone signing as
follows: For each NSEC5 RR, compute an NSEC5PROOF RR corresponding to
the original owner name of the NSEC5 RR. The content of the
precomputed NSEC5PROOF record MUST be the same as if the record was
computed on the fly when serving the zone.  NSEC5PROOF records are not
part of the zone and SHOULD be stored separately from the zone file.</t>

</section>
</section>
<section anchor="zone-serving" title="Zone Serving">

<t>This specification modifies DNSSEC-enabled DNS responses generated by
authoritative servers. In particular, it replaces use of NSEC or NSEC3
RRs in such responses with NSEC5 RRs and adds NSEC5PROOF RRs.</t>

<t>According to the type of a response, an authoritative server MUST
include NSEC5 RRs in the response, as defined in <xref target="nsec5_proofs"/>. For
each NSEC5 RR in the response, a corresponding RRSIG RRset and an
NSEC5PROOF MUST be added as well. The NSEC5PROOF RR has its owner name
set to the domain name required according to the description in 
<xref target="nsec5_proofs"/>. The
class and TTL of the NSEC5PROOF RR MUST be the same as the class and
TTL value of the corresponding NSEC5 RR. The RDATA payload of the
NSEC5PROOF is set according to the description in
<xref target="nsec5proof_rdata"/>.</t>

<t>Notice that the NSEC5PROOF owner name can be a wildcard (e.g., source
of synthesis proof in wildcard No Data responses). The name also
always matches the domain name required for the proof while the NSEC5
RR may only cover (not match) the name in the proof (e.g., closest
encloser in Name Error responses).</t>

<t>If NSEC5 is used, an answering server MUST use exactly one NSEC5 chain
for one signed zone.</t>

<t>NSEC5 MUST NOT be used in parallel with NSEC, NSEC3, or any other
authenticated denial of existence mechanism that allows for
enumeration of zone contents, as this would defeat a principal
security goal of NSEC5.</t>

<t>Similarly to NSEC3, the owner names of NSEC5 RRs are not represented
in the NSEC5 chain and therefore NSEC5 records deny their own
existence. The desired behavior caused by this paradox is the same as
described in Section 7.2.8 of <xref target="RFC5155"/>.</t>

</section>
<section anchor="nsec5key-rollover-mechanism" title="NSEC5KEY Rollover Mechanism">

<t>Replacement of the NSEC5 key implies generating a new NSEC5 chain. The
NSEC5KEY rollover mechanism is similar to "Pre-Publish Zone Signing
Key Rollover" as specified in <xref target="RFC6781"/>. The NSEC5KEY rollover MUST
be performed as a sequence of the following steps:</t>

<t><list style="numbers">
  <t>A new public NSEC5 key is added into the NSEC5KEY RRset in the zone
  apex.</t>
  <t>The old NSEC5 chain is replaced by a new NSEC5 chain constructed
  using the new key. This replacement MUST happen as a single atomic
  operation; the server MUST NOT be responding with RRs from both the
  new and old chain at the same time.</t>
  <t>The old public key is removed from the NSEC5KEY RRset in the zone
  apex.</t>
</list></t>

<t>The minimum delay between steps 1 and 2 MUST be the time it takes for
the data to propagate to the authoritative servers, plus the TTL value
of the old NSEC5KEY RRset.</t>

<t>The minimum delay between steps 2 and 3 MUST be the time it takes for
the data to propagate to the authoritative servers, plus the maximum
zone TTL value of any of the data in the previous version of the zone.</t>

</section>
<section anchor="secondary-servers" title="Secondary Servers">

<t>This document does not define mechanism to distribute private NSEC5 keys.
See <xref target="keyleak"/> for security considerations for private NSEC5 keys.</t>

</section>
<section anchor="zones-using-unknown-nsec5-algorithms" title="Zones Using Unknown NSEC5 Algorithms">

<t>Zones that are signed with an unknown NSEC5 algorithm or with an
unavailable private NSEC5 key cannot be effectively served. Such zones
SHOULD be rejected when loading and servers SHOULD respond with
RCODE=2 (Server failure) when handling queries that would fall under
such zones.</t>

</section>
<section anchor="dynamic-updates" title="Dynamic Updates">

<t>A zone signed using NSEC5 MAY accept dynamic updates <xref target="RFC2136"/>.  The
changes to the zone MUST be performed in a way that ensures that the
zone satisfies the properties specified in <xref target="zone_signing"/> at any
time.  The process described in <xref target="RFC5155"/> Section 7.5 describes how
to handle the issues surrounding the handling of empty non-terminals
as well as Opt-Out.</t>

<t>It is RECOMMENDED that the server rejects all updates containing
changes to the NSEC5 chain and its related RRSIG RRs, and performs
itself any required alternations of the NSEC5 chain induced by the
update.  Alternatively, the server MUST verify that all the properties
are satisfied prior to performing the update atomically.</t>

</section>
</section>
<section anchor="resolver-considerations" title="Resolver Considerations">

<t>The same considerations as described in Section 9 of <xref target="RFC5155"/> for
NSEC3 apply to NSEC5. In addition, as NSEC5 RRs can be validated only
with appropriate NSEC5PROOF RRs, the NSEC5PROOF RRs MUST be all
together cached and included in responses with NSEC5 RRs.</t>

</section>
<section anchor="validator-considerations" title="Validator Considerations">

<section anchor="validating-responses" title="Validating Responses">

<t>The validator MUST ignore NSEC5 RRs with Flags field values other than
the ones defined in <xref target="nsec5_flags"/>.</t>

<t>The validator MAY treat responses as bogus if the response contains
NSEC5 RRs that refer to a different NSEC5KEY.</t>

<t>According to a type of a response, the validator MUST verify all
conditions defined in <xref target="nsec5_proofs"/>. Prior to making decision based
on the content of NSEC5 RRs in a response, the NSEC5 RRs MUST be
validated.</t>

<t>To validate a denial of existence, public NSEC5 keys for the zone are
required in addition to DNSSEC public keys. Similarly to DNSKEY RRs,
the NSEC5KEY RRs are present at the zone apex.</t>

<t>The NSEC5 RR is validated as follows:</t>

<t><list style="numbers">
  <t>Select a correct public NSEC5 key to validate the NSEC5 proof. The
  Key Tag value of the NSEC5PROOF RR must match with the key tag value
  computed from the NSEC5KEY RDATA.</t>
  <t>Validate the NSEC5 proof present in the NSEC5PROOF Owner Name Hash
  field using the public NSEC5 key. If there are multiple NSEC5KEY RRs
  matching the key tag, at least one of the keys must validate the
  NSEC5 proof.</t>
  <t>Compute the NSEC5 hash value from the NSEC5 proof and check if the
  response contains NSEC5 RR matching or covering the computed NSEC5
  hash.  The TTL values of the NSEC5 and NSEC5PROOF RRs must be the
  same.</t>
  <t>Validate the signature on the NSEC5 RR.</t>
</list></t>

<t>If the NSEC5 RR fails to validate, it MUST be ignored. If some of the
conditions required for an NSEC5 proof are not satisfied, the response
MUST be treated as bogus.</t>

<t>Notice that determining the closest encloser and next closer name in
NSEC5 is easier than in NSEC3. NSEC5 and NSEC5PROOF RRs are always
present in pairs in responses and the original owner name of the NSEC5
RR matches the owner name of the NSEC5PROOF RR.</t>

</section>
<section anchor="validating-referrals-to-unsigned-subzones" title="Validating Referrals to Unsigned Subzones">

<t>The same considerations as defined in Section 8.9 of <xref target="RFC5155"/> for
NSEC3 apply to NSEC5.</t>

</section>
<section anchor="responses-with-unknown-nsec5-algorithms" title="Responses With Unknown NSEC5 Algorithms">

<t>A validator MUST ignore NSEC5KEY RRs with unknown NSEC5
algorithms. The practical result of this is that zones signed with
unknown algorithms will be considered bogus.</t>

</section>
</section>
<section anchor="special-considerations" title="Special Considerations">

<section anchor="transition-mechanism" title="Transition Mechanism">

<t>[TODO: The following information will be covered.]</t>

<t><list style="symbols">
  <t>Transition to NSEC5 from NSEC/NSEC3</t>
  <t>Transition from NSEC5 to NSEC/NSEC3</t>
  <t>Transition to new NSEC5 algorithms</t>
</list></t>

</section>
<section anchor="private-nsec5-keys" title="Private NSEC5 keys">

<t>This document does not define a format to store private NSEC5
keys. Use of a standardized and adopted format is RECOMMENDED.</t>

<t>The private NSEC5 key MAY be shared between multiple zones, however a
separate key is RECOMMENDED for each zone.</t>

</section>
<section anchor="domain-name-length-restrictions" title="Domain Name Length Restrictions">

<t>NSEC5 creates additional restrictions on domain name lengths. In
particular, zones with names that, when converted into hashed owner
names, exceed the 255 octet length limit imposed by <xref target="RFC1035"/> cannot
use this specification.</t>

<t>The actual maximum length of a domain name depends on the length of
the zone name and the NSEC5 algorithm used.</t>

<t>All NSEC5 algorithms defined in this document use 256-bit NSEC5 hash
values.  Such a value can be encoded in 52 characters in Base32hex
without padding.  When constructing the NSEC5 RR owner name, the
encoded hash is prepended to the name of the zone as a single label
which includes the length field of a single octet.  The maximum length
of the zone name in wire format using the 256-bit hash is therefore
202 octets (255 - 53).</t>

</section>
</section>
<section anchor="implementation-status" title="Implementation Status">

<t>NSEC5 has been implemented for the Knot DNS authoritative server
(version 1.6.4) and the Unbound recursive server (version 1.5.9).  The
implementations did not introduce additional library dependencies; all
cryptographic primitives are already present in OpenSSL v1.0.2j, which
is used by both implementations.  The implementations support the full
spectrum of negative responses, (i.e., NXDOMAIN, NODATA, Wildcard,
Wildcard NODATA, and unsigned delegation) using the EC-P256-SHA256
algorithm. The code is deliberately modular, so that the
EC-ED25519-SHA256 algorithm could be implemented by using the Ed25519
elliptic curve <xref target="RFC8080"/> as a drop-in replacement for the P256
elliptic curve.  The authoritative server implements the optimization
from <xref target="precompute"/> to precompute the NSEC5PROOF RRs matching each
NSEC5 record.</t>

</section>
<section anchor="performance-considerations" title="Performance Considerations">

<t>The performance of NSEC5 has been evaluated in <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<section anchor="zea" title="Zone Enumeration Attacks">

<t>NSEC5 is robust to zone enumeration via offline dictionary attacks by
any attacker that does not know the private NSEC5 key. Without the
private NSEC5 key, that attacker cannot compute the NSEC5 proof that
corresponds to a given domain name.  The only way it can learn the
NSEC5 proof value for a domain name is by querying the authoritative
server for that name. Without the NSEC5 proof value, the attacker
cannot learn the NSEC5 hash value. Thus, even an attacker that
collects the entire chain of NSEC5 RR for a zone cannot use offline
attacks to "reverse" that NSEC5 hash values in these NSEC5 RR and thus
learn which names are present in the zone.  A formal cryptographic
proof of this property is in <xref target="nsec5"/> and <xref target="nsec5ecc"/>.</t>

</section>
<section anchor="keyleak" title="Compromise of the Private NSEC5 Key">

<t>NSEC5 requires authoritative servers to hold the private NSEC5 key,
but not the private zone-signing keys or the private key-signing keys
for the zone.</t>

<t>The private NSEC5 key cannot be used to modify zone contents, because
zone contents are signed using the private zone-signing key.  As such,
a compromise of the private NSEC5 key does not compromise the
integrity of the zone.  An adversary that learns the private NSEC5 key
can, however, perform offline zone-enumeration attacks.  For this
reason, the private NSEC5 key need only be as secure as the DNSSEC
records whose privacy (against zone enumeration) is being protected by
NSEC5.  A formal cryptographic proof of this property is in <xref target="nsec5"/>
and <xref target="nsec5ecc"/>.</t>

<t>To preserve this property of NSEC5, the private NSEC5 key MUST be
different from the private zone-signing keys or key-signing keys for
the zone.</t>

</section>
<section anchor="keylen" title="Key Length Considerations">

<t>The NSEC5 key must be long enough to withstand attacks for as long as
the privacy of the zone contents is important. Even if the NSEC5 key
is rolled frequently, its length cannot be too short, because zone
privacy may be important for a period of time longer than the lifetime
of the key.  For example, an attacker might collect the entire chain
of NSEC5 RR for the zone over one short period, and then, later (even
after the NSEC5 key expires) perform an offline dictionary attack that
attempts to reverse the NSEC5 hash values present in the NSEC5 RRs.
This is in contrast to zone-signing and key-signing keys used in
DNSSEC; these keys, which ensure the authenticity and integrity of the
zone contents, need to remain secure only during their lifetime.</t>

</section>
<section anchor="hashcol" title="NSEC5 Hash Collisions">

<t>If the NSEC5 hash of a QNAME collides with the NSEC5 hash of the owner
name of an NSEC5 RR, it will be impossible to prove the non-existence
of the colliding QNAME. However, the NSEC5 VRFs ensure that obtaining
such a collision is as difficult as obtaining a collision in the
SHA-256 hash function, requiring approximately 2^128 effort. Note that
DNSSEC already relies on the assumption that a cryptographic hash
function is collision-resistant, since these hash functions are used
for generating and validating signatures and DS RRs. See also the
discussion on key lengths in <xref target="nsec5"/>.</t>

</section>
</section>
<section anchor="iana_considerations" title="IANA Considerations">

<t>This document updates the IANA registry "Domain Name System (DNS)
Parameters" in subregistry "Resource Record (RR) TYPEs", by defining
the following new RR types:</t>

<t><list style='empty'>
  <t>NSEC5KEY   value TBD.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5      value TBD.</t>
</list></t>

<t><list style='empty'>
  <t>NSEC5PROOF value TBD.</t>
</list></t>

<t>This document creates a new IANA registry for NSEC5 algorithms.  This
registry is named "DNSSEC NSEC5 Algorithms". The initial content of
the registry is:</t>

<t><list style='empty'>
  <t>0     is Reserved.</t>
</list></t>

<t><list style='empty'>
  <t>1     is EC-P256-SHA256.</t>
</list></t>

<t><list style='empty'>
  <t>2     is EC-ED25519-SHA256.</t>
</list></t>

<t><list style='empty'>
  <t>3-255 is Available for assignment.</t>
</list></t>

<t>This document updates the IANA registry "DNS Security Algorithm
Numbers" by defining following aliases:</t>

<t><list style='empty'>
  <t>TBD is NSEC5-ECDSAP256SHA256 alias for ECDSAP256SHA256 (13).</t>
</list></t>

<t><list style='empty'>
  <t>TBD is NSEC5-ED25519, alias for ED25519 (15).</t>
</list></t>

</section>
<section anchor="contributors" title="Contributors">

<t>This document would not be possible without help of
Moni Naor (Weizmann Institute),
Sachin Vasant (Cisco Systems),
Leonid Reyzin (Boston University), and
Asaf Ziv (Weizmann Institute)
who contributed to the design of NSEC5.
Ondrej Sury (CZ.NIC Labs), and
Duane Wessels (Verisign Labs)
provided advice on the implementation of NSEC5, and assisted with
evaluating its performance.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC1034;
&RFC1035;
&RFC2119;
&RFC2136;
&RFC2181;
&RFC2308;
&RFC4033;
&RFC4034;
&RFC4035;
&RFC4648;
&RFC5114;
&RFC5155;
&RFC6234;
&RFC6605;
&RFC7748;
&RFC8080;
&I-D.goldbe-vrf;
<reference anchor="FIPS-186-3" >
  <front>
    <title>Digital Signature Standard (DSS)</title>
    <author >
      <organization>National Institute for Standards and Technology</organization>
    </author>
    <date year="2009" month="June"/>
  </front>
  <seriesInfo name="FIPS" value="PUB 186-3"/>
</reference>


    </references>

    <references title='Informative References'>

&RFC6781;
&RFC7129;
&RFC7719;
&I-D.gieben-nsec4;
<reference anchor="nsec5" target="https://eprint.iacr.org/2014/582.pdf">
  <front>
    <title>NSEC5: Provably Preventing DNSSEC Zone Enumeration</title>
    <author initials="S." surname="Goldberg">
      <organization></organization>
    </author>
    <author initials="M." surname="Naor">
      <organization></organization>
    </author>
    <author initials="D." surname="Papadopoulos">
      <organization></organization>
    </author>
    <author initials="L." surname="Reyzin">
      <organization></organization>
    </author>
    <author initials="S." surname="Vasant">
      <organization></organization>
    </author>
    <author initials="A." surname="Ziv">
      <organization></organization>
    </author>
    <date year="2014" month="July"/>
  </front>
  <seriesInfo name="in" value="NDSS'15"/>
</reference>
<reference anchor="nsec5ecc" target="https://eprint.iacr.org/2017/099.pdf">
  <front>
    <title>Can NSEC5 be Practical for DNSSEC Deployments?</title>
    <author initials="D." surname="Papadopoulos">
      <organization></organization>
    </author>
    <author initials="D." surname="Wessels">
      <organization></organization>
    </author>
    <author initials="S." surname="Huque">
      <organization></organization>
    </author>
    <author initials="J." surname="Vcelak">
      <organization></organization>
    </author>
    <author initials="M." surname="Naor">
      <organization></organization>
    </author>
    <author initials="L." surname="Reyzin">
      <organization></organization>
    </author>
    <author initials="S." surname="Goldberg">
      <organization></organization>
    </author>
    <date year="2017" month="February"/>
  </front>
  <seriesInfo name="in" value="ePrint Cryptology Archive 2017/099"/>
</reference>
<reference anchor="nsec3gpu" >
  <front>
    <title>GPU-Based NSEC3 Hash Breaking</title>
    <author initials="M." surname="Wander">
      <organization></organization>
    </author>
    <author initials="L." surname="Schwittmann">
      <organization></organization>
    </author>
    <author initials="C." surname="Boelmann">
      <organization></organization>
    </author>
    <author initials="T." surname="Weis">
      <organization></organization>
    </author>
    <date year="2014"/>
  </front>
  <seriesInfo name="in" value="IEEE Symp. Network Computing and Applications (NCA)"/>
</reference>
<reference anchor="nsec3walker" target="http://dnscurve.org/nsec3walker.html">
  <front>
    <title>Nsec3 walker</title>
    <author initials="D.J." surname="Bernstein">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nmap-nsec-enum" target="https://nmap.org/nsedoc/scripts/dns-nsec-enum.html">
  <front>
    <title>nmap: dns-nsec-enum</title>
    <author initials="J.R." surname="Bond">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nmap-nsec3-enum" target="https://nmap.org/nsedoc/scripts/dns-nsec3-enum.html">
  <front>
    <title>nmap: dns-nsec3-enum</title>
    <author initials="A." surname="Nikolic">
      <organization></organization>
    </author>
    <author initials="J.R." surname="Bond">
      <organization></organization>
    </author>
    <date year="2011"/>
  </front>
</reference>
<reference anchor="nsec3map" target="https://github.com/anonion0/nsec3map.">
  <front>
    <title>nsec3map with John the Ripper plugin</title>
    <author >
      <organization>anonion0</organization>
    </author>
    <date year="2015"/>
  </front>
</reference>
<reference anchor="ldns-walk" target="http://git.nlnetlabs.nl/ldns/tree/examples/ldns-walk.c">
  <front>
    <title>ldns</title>
    <author >
      <organization>NLNetLabs</organization>
    </author>
    <date year="2015"/>
  </front>
</reference>
<reference anchor="MRV99" >
  <front>
    <title>Verifiable Random Functions</title>
    <author initials="S." surname="Michali">
      <organization></organization>
    </author>
    <author initials="M." surname="Rabin">
      <organization></organization>
    </author>
    <author initials="S." surname="Vadhan">
      <organization></organization>
    </author>
    <date year="1999"/>
  </front>
  <seriesInfo name="in" value="FOCS"/>
</reference>


    </references>


<section anchor="examples" title="Examples">

<t>We use a small DNS zone 
to illustrate how negative responses are handled with NSEC5.  For brevity,
the class is not shown (defaults to IN) and the SOA record is shortened,
resulting in the following zone file:</t>

<figure><artwork><![CDATA[
example.org.        SOA ( ... )  
example.org.        NS  a.example.org

a.example.org.      A 192.0.2.1  

c.example.org.      A 192.0.2.2  
c.example.org.      TXT "c record"  

d.example.org.      NS ns1.d.example.org

ns1.d.example.org.  A 192.0.2.4

g.example.org.      A 192.0.2.1  
g.example.org.      TXT "g record"

*.a.example.org.    TXT "wildcard record"
]]></artwork></figure>

<t>Notice the delegation to an unsigned zone d.example.org served 
by ns1.d.example.org.  (Note: if the d.example.org zone was signed, 
then the example.org zone have a DS record for d.example.org.)</t>

<t>Next we present example responses. All cryptographic values are
shortened as indicated by "&#8230;" and ADDITIONAL sections have been
removed.</t>

<section anchor="name-error-example" title="Name Error Example">

<t>Consider a query for a type A record for a.b.c.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of closest encloser c.example.org.</t>
  <t>Non-existence of wildcard at closest encloser *.c.example.org.</t>
  <t>Non-existence of next closer b.c.example.org.</t>
</list></t>

<!-- tale should figure out the right way to keep this on one page -->
<t>To do this, the server returns:</t>

<figure><artwork><![CDATA[
;; ->>HEADER<<- opcode: QUERY; status: NXDOMAIN; id: 5937 
 
;; QUESTION SECTION:  
;; a.b.c.example.org.           IN      A

;; AUTHORITY SECTION:  
example.org.         3600 IN SOA a.example.org. hostmaster.example.org. (  
            2010111214 21600 3600 604800 86400 )

example.org.         3600 IN RRSIG  SOA 16 2 3600 (  
            20170412024301 20170313024301 5137 example.org. rT231b1rH... )
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for c.example.com. It's RDATA is the NSEC5 proof 
corresponding to c.example.com.  (NSEC5 proofs are randomized values,
because NSEC5 proof values are computed uses the EC-VRF 
from <xref target="I-D.goldbe-vrf" />.)
Per <xref target="precompute"/>, this NSEC5PROOF RR may be precomputed.</t>

<figure><artwork><![CDATA[
c.example.org.      86400 IN NSEC5PROOF 48566 Amgn22zUiZ9JVyaT...
]]></artwork></figure>

<t>This is a signed NSEC5 RR "matching" c.example.org, which proves 
the existence of closest encloser c.example.org.
The NSEC5 RR has its owner name equal to the
NSEC5 hash of c.example.org, which is O4K89V.  (NSEC5 hash values are 
deterministic given the public NSEC5 key.)
The NSEC5 RR also has its Wildcard flag cleared (see the "0" after the key ID 
48566). This proves the non-existence of the wildcard 
at the closest encloser *.c.example.com.
NSEC5 RRs are  precomputed.</t>

<figure><artwork><![CDATA[
o4k89v.example.org. 86400 IN NSEC5   48566 0 0O49PI A TXT RRSIG  
o4k89v.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (  
            20170412024301 20170313024301 5137 example.org. zDNTSMQNlz... )
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for b.c.example.org. It's RDATA is the NSEC5 proof 
corresponding to b.c.example.com.  This NSEC5PROOF RR must be computed on the fly.</t>

<figure><artwork><![CDATA[
b.c.example.org.    86400 IN NSEC5PROOF 48566 AuvvJqbUcEs8sCpY...
]]></artwork></figure>

<t>This is a signed  NSEC5 RR "covering" b.c.example.org, which proves the
non-existence of the next closer name b.c.example.org
The NSEC5 hash of b.c.example.org, which is AO5OF, sorts in canonical 
order between the "covering" NSEC5 RR's Owner Name (which is 0O49PI)
and Next Hashed Owner Name (which is BAPROH).</t>

<figure><artwork><![CDATA[
0o49pi.example.org. 86400 IN NSEC5      48566 0 BAPROH (
            NS SOA RRSIG DNSKEY NSEC5KEY )

0o49pi.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
            20170412024301 20170313024301 5137 example.org. 4HT1uj1YlMzO)

[TODO: Add discussion of CNAME and DNAME to the example?]
]]></artwork></figure>

</section>
<section anchor="no-data-example" title="No Data Example">

<t>Consider a query for a type MX record for c.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of c.example.org. for any type other than MX or CNAME</t>
</list></t>

<t>To do this, the server returns:</t>

<figure><artwork><![CDATA[
;; ->>HEADER<<- opcode: QUERY; status: NOERROR; id: 38781

;; QUESTION SECTION:
;; c.example.org.    IN MX

;; AUTHORITY SECTION:
example.org.    3600 IN SOA     a.example.org. hostmaster.example.org. (
            2010111214 21600 3600 604800 86400 )

example.org.    3600 IN RRSIG   SOA 16 2 3600 20170412024301 20170313024301 5137 example.org. /rT231b1rH/p
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for c.example.com. Its RDATA corresponds to the NSEC5
proof for c.example.com. which is a randomized value.  Per <xref target="precompute"/>, this
NSEC5PROOF RR may be precomputed.</t>

<figure><artwork><![CDATA[
c.example.org. 86400 IN NSEC5PROOF 48566 Amgn22zUiZ9JVyaT
]]></artwork></figure>

<t>This is a signed NSEC5 RR "matching" c.example.org. with CNAME and 
MX Type Bits cleared and its TXT Type Bit set. This NSEC5 RR has its owner
name equal to the NSEC5 hash of c.example.org. This proves the existence of
c.example.org. for a type other than MX and CNAME. 
NSEC5 RR are precomputed.</t>

<figure><artwork><![CDATA[
o4k89v.example.org. 86400 IN NSEC5   48566 0 0O49PI A TXT RRSIG

o4k89v.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
            20170412024301 20170313024301 5137 example.org. zDNTSMQNlz/J)
]]></artwork></figure>

</section>
<section anchor="delegation-to-an-unsigned-zone-in-an-opt-out-span-example" title="Delegation to an Unsigned Zone in an Opt-Out span Example">

<t>Consider a query for a type A record for foo.d.example.org.</t>

<t>Here, d.example.org is a delegation to an unsigned zone, which lies within an Opt-Out span.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Non-existence of signature on next closer name d.example.org.</t>
  <t>Opt-out bit is set in NSEC5 record covering next closer name
 d.example.org.</t>
  <t>Existence of closest provable encloser example.org</t>
</list></t>

<t>To do this, the server returns:</t>

<figure><artwork><![CDATA[
;; ->>HEADER<<- opcode: QUERY; status: NOERROR; id: 45866

;; QUESTION SECTION:
;; foo.d.example.org.         IN A

;; AUTHORITY SECTION:
d.example.org.       3600  IN NS      ns1.d.example.org.
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for d.example.org.  Its RDATA is the NSEC5 proof 
corresponding to d.example.org. This NSEC5PROOF RR is computed on the fly.</t>

<figure><artwork><![CDATA[
d.example.org.      86400   IN      NSEC5PROOF      48566 A9FpmeH79q7g6VNW
]]></artwork></figure>

<t>This is a signed NSEC5 RR "covering" d.example.org with its Opt-out bit set 
(see the "1" after the key ID 48566). The NSEC5 hash of d.example.org 
(which is BLE8LR) sorts in canonical order between the
"covering" NSEC5 RR's Owner Name (BAPROH) and Next Hashed Owner Name (JQBMG4).
This proves that no signed RR exists for d.example.org, but that the zone
might contain a unsigned RR for a name whose NSEC5 hash sorts in canonical
order between BAPROH and JQBMG4.</t>

<figure><artwork><![CDATA[
baproh.example.org. 86400 IN NSEC5   48566 1 JQBMG4 A TXT RRSIG

baproh.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
            20170412024301 20170313024301 5137 example.org. fjTcoRKgdML1)
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for example.com. It's RDATA is the NSEC5 proof 
corresponding to example.com.  Per <xref target="precompute"/>, this NSEC5PROOF RR may be precomputed.</t>

<figure><artwork><![CDATA[
example.org.        86400 IN NSEC5PROOF      48566 AjwsPCJZ8zH/D0Tr
]]></artwork></figure>

<t>This is a signed NSEC5 RR "matching" example.org which proves the existence
of a signed RRs for example.org. This NSEC5 RR has its owner
name equal to the NSEC5 hash of example.org which is 0O49PI.<vspace />
NSEC5 RR are   precomputed.</t>

<figure><artwork><![CDATA[
0o49pi.example.org. 86400 IN NSEC5   48566 0 BAPROH (
            NS SOA RRSIG DNSKEY NSEC5KEY)

0o49pi.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
            20170412034216 20170313034216 5137 example.org. 4HT1uj1YlMzO)
]]></artwork></figure>

</section>
<section anchor="wildcard-example" title="Wildcard Example">

<t>Consider a query for a type TXT record for foo.a.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of the TXT record for the wildcard *.a.example.org</t>
  <t>Non-existence of the next closer name foo.a.example.org.</t>
</list></t>

<t>To do this, the server returns:</t>

<figure><artwork><![CDATA[
;; ->>HEADER<<- opcode: QUERY; status: NOERROR; id: 53731

;; QUESTION SECTION:
;; foo.a.example.org.        IN TXT
]]></artwork></figure>

<t>This is a signed TXT record for the wildcard at a.example.org 
(number of labels is set to 3 in the RRSIG record).</t>

<figure><artwork><![CDATA[
;; ANSWER SECTION:
foo.a.example.org.      3600 IN TXT     "wildcard record"

foo.a.example.org.      3600 IN RRSIG   TXT 16 3 3600 (
            20170412024301 20170313024301 5137 example.org. aeaLgZ8sk+98)

;; AUTHORITY SECTION:
example.org.            3600 IN NS      a.example.org.

example.org.            3600 IN RRSIG   NS 16 2 3600 (
            20170412024301 20170313024301 5137 example.org. 8zuN0h2x5WyF)
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for foo.a.example.org.  This
 NSEC5PROOF RR must be computed on-the-fly.</t>

<figure><artwork><![CDATA[
foo.a.example.org.     86400 IN NSEC5PROOF      48566 AjqF5FGGVso40Lda
]]></artwork></figure>

<t>This is a signed NSEC5 RR "covering" foo.a.example.org.  The NSEC5 hash of
foo.a.example.org is FORDMO and sorts in canonical order between the 
NSEC5 RR's Owner Name (which is BAPROH) and Next Hashed Owner Name 
(which is JQBMG4). This proves the non-existence of the next closer
name foo.a.example.com. NSEC5 RRs are precomputed.</t>

<figure><artwork><![CDATA[
    baproh.example.org. 86400 IN NSEC5   48566 1 JQBMG4 A TXT RRSIG
    baproh.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
        20170412024301 20170313024301 5137 example.org. fjTcoRKgdML1
]]></artwork></figure>

</section>
<section anchor="wildcard-no-data-example" title="Wildcard No Data Example">

<t>Consider a query for a type MX record for foo.a.example.org.</t>

<t>The server must prove the following facts:</t>

<t><list style="symbols">
  <t>Existence of wildcard at closest encloser
*.a.example.org. for any type other than MX or CNAME.</t>
  <t>Non-existence of the next closer name foo.a.example.org.</t>
</list></t>

<t>To do this, the server returns:</t>

<figure><artwork><![CDATA[
;; ->>HEADER<<- opcode: QUERY; status: NOERROR; id: 17332

;; QUESTION SECTION:
;; foo.a.example.org.           IN      MX

;; AUTHORITY SECTION:
example.org.       3600 IN SOA     a.example.org. hostmaster.example.org. (
            2010111214 21600 3600 604800 86400 )

example.org.       3600 IN RRSIG   SOA 16 2 3600 (
            20170412024301 20170313024301 5137 example.org. /rT231b1rH/p )
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for *.a.example.com, with RDATA equal to the NSEC5 
proof for *.a.example.com. Per <xref target="precompute"/>, this NSEC5PROOF RR may be precomputed.</t>

<figure><artwork><![CDATA[
*.a.example.org.  86400 IN NSEC5PROOF      48566 Aq38RWWPhbs/vtih
]]></artwork></figure>

<t>This is a signed NSEC5 RR "matching" *.a.example.org with 
its CNAME and MX Type Bits cleared and its TXT Type Bit set.
This NSEC5 RR has its owner name equal to the NSEC5 hash of *.a.example.org. 
NSEC5 RRs are   precomputed.</t>

<figure><artwork><![CDATA[
mpu6c4.example.org. 86400 IN NSEC5   48566 0 O4K89V TXT RRSIG

mpu6c4.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
            20170412024301 20170313024301 5137 example.org. m3I75ttcWwVC )
]]></artwork></figure>

<t>This is an NSEC5PROOF RR for foo.a.example.com. This NSEC5PROOF RR must be 
computed on-the-fly.</t>

<figure><artwork><![CDATA[
foo.a.example.org.  86400 IN NSEC5PROOF      48566 AjqF5FGGVso40Lda
]]></artwork></figure>

<t>This is a signed NSEC5 RR "covering" foo.a.example.org. The NSEC5 hash of
foo.a.example.org is FORDMO, and sorts in canonical order between this
covering NSEC5 RR's Owner Name (which is BAPROH) and Next Hashed Owner Name
(which is JQBMG4).   This proves the existence of the wildcard at closest encloser
*.a.example.org. for any type other than MX or CNAME. 
NSEC5 RRs are   precomputed.</t>

<figure><artwork><![CDATA[
baproh.example.org. 86400 IN NSEC5   48566 1 JQBMG4 A TXT RRSIG

baproh.example.org. 86400 IN RRSIG   NSEC5 16 3 86400 (
            20170412024301 20170313024301 5137 example.org. fjTcoRKgdML1 )
]]></artwork></figure>

</section>
</section>
<section anchor="change-log" title="Change Log">

<t>Note to RFC Editor: if this document does not obsolete an existing
RFC, please remove this appendix before publication as an RFC.</t>

<t><list style='empty'>
  <t>pre 00 - initial version of the document submitted to mailing list only</t>
</list></t>

<t><list style='empty'>
  <t>00 - fix NSEC5KEY rollover mechanism, clarify NSEC5PROOF RDATA,
clarify inputs and outputs for NSEC5 proof and NSEC5 hash
computation.</t>
</list></t>

<t><list style='empty'>
  <t>01 - Add Performance Considerations section.</t>
</list></t>

<t><list style='empty'>
  <t>02 - Add elliptic curve based VRF. Add measurement of response sizes
based on empirical data.</t>
</list></t>

<t><list style='empty'>
  <t>03 - Mention precomputed NSEC5PROOF Values in Performance
Considerations section.</t>
</list></t>

<t><list style='empty'>
  <t>04 - Edit Rationale, How NSEC5 Works, and Security Consideration
sections for clarity.  Edit Zone Signing section, adding
precomputation of NSEC5PROOFs.  Remove RSA-based NSEC5
specification.  Rewrite Performance Considerations and
Implementation Status sections.</t>
</list></t>

<t><list style='empty'>
  <t>05 - Remove appendix specifying VRFs and add reference to 
<xref target="I-D.goldbe-vrf"/>.  Add <xref target="examples"/>.</t>
</list></t>

<t><list style='empty'>
  <t>06 - Editorial changes.  Minor updates to <xref target="name-error-responses"/>.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIABsQTVoAA+V9a1cbV7bg9/MrzpAPgVxJRggwJt3pxoBjEhscwHYnNz1Z
JamAiqUqpaoExo7vb5/9Os8qCWzHc2fNpVfHIFWdxz77/TrdblfVWT1Jd/Xx
2eH+VkcfHJ/BL3pvXl+leZ2Nkjod64M0z5KJLi704dusqtN8lKpkOCzTa3lP
jYtRnkxhmHGZXNTd61E6Sd508yodbXXXt9UYhtnVG+v9HaWyWbmr63Je1Rvr
64/WN1RSpsmuPsrrtMzTWt1cwqBpfVOUb/Rr+E+WX+rvy2I+U29u3GPdA5xI
wfp2dVWPlRoVY3hyV8+rblKNskzNsl2ldVfXxYj+rW6nZXpR8e9FWds/RsV0
loxq+r28GKXjqr6dpOarKYCBn8vySZanSiUAm6KkweH/Gj6vdvUPPf2KNk0f
MSx+SHL/w6KE5e3/0js+2qe/K1hCCst/nk3Sqriu3iS63x9sP9iib0dZfbur
X5TJVcJ/F2MYsj9Y1+vr8sE8r8tbHJL+TqdJNtnVvyd5j8H/zzwb9UbvwnWe
9fT3xWQ8TMtLb6VnV0lZ5OE3tNzHRVXDFy/z7DotK1hSsPJ+v6/359MpAB6f
Oqs7+vn+WX/g74BHoA/K9DIrctjwnrejr9c3NvpbX4dbenm25+/pktb1z1HV
G8576Xgebumgp18ks2RczIr5pKi8bR1k06wus6JqPkC7e/rjy7PzYEf7kzQp
bwBbS/04uQ0X9bQATPwR/uMvbZzNaOh/Aj73rt40gP10/sc8DSA9nwKo3Me0
kLMEUOCiKEdpsJqNra11/TqpKljOeVqWHlifAhWMI7i+CuAK1Pawvxyu1RUu
45+X+FcPcL0B1/2efpbclETwHliT62ys98OvaB97bxIYC9Y6usqLSXGZpVWI
MLCfx2WRjG8McO+FI+sb/c2Nbn99a3PpdmqA4j8TWgLtRuVFOU1qQF0kViDt
/vpgc1fb37fM7xv9/iP3+2Db/b7Tt78P1nfM75vrg4H3+6b3ux1zc3vTPr/V
72+637fsM9sb7t3t7XX7+cOH7t2d9Z11+v2oe9BjQuhelxe4oydHL866/Z3t
7mCXwCCc/CC7zAAU+iy7zJN6XqZAmEk+TsqxXj04O1ujZx0Ts4d3DKAqcnjx
KK9gqHmdakBJ+3Kl4V93tHx+hrGvP0I2T0edlnDqWX5RmMFxmcDJXj7WtFaQ
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
1wAA

-->

</rfc>

